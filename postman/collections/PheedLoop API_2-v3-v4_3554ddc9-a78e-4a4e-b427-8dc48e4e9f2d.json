{
    "info": {
        "_postman_id": "2abcdc42-2c9c-4766-b2ce-07d9b3c3c303",
        "name": "PheedLoop API_2-v3-v4",
        "description": "Welcome to PheedLoop's API Documentation!\n\nWe'd love to hear your feedback on what's available so far and any additions you'd like to see. Don't hesitate to reach out to our team directly or to hello@pheedloop.com.\n\nIn order to authenticate with our API, you require three things:\n\n* API Key\n* API Secret\n* Organization Code\n\nYou can find all this information from your Integrations tab in the Dashboard. You can find all this information [here](https://dash.pheedloop.com/settings/integrations/). If that link does not work for you, you can manually navigate to the page by logging into your Dashboard, then going to **Settings -> Integrations -> Rest API**.\n\nThe **API Key** and **API Secret** are used in the header of every request and should look like this:\n\n| Header Key        | Value           |\n| ------------- |:-------------:|\n| X-API-KEY      | \\<YOUR-API-KEY\\> |\n| X-API-SECRET      | \\<YOUR-API-SECRET\\> |\n\nThe **Organization Code** is used in the URL of requests. For example:\n```https://api.pheedloop.com/api/v3/organization/<YOUR-ORGANIZATION-CODE>/resthooks/validateauth/```\n\nAll URLs should end in a `/`.",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Authentication",
            "item": [
                {
                    "name": "Validate Authentication",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(",
                                    "        [",
                                    "            'organization_name', ",
                                    "            'response',",
                                    "            'organization_code'",
                                    "        ]",
                                    "    );",
                                    "});",
                                    "",
                                    "pm.test(\"Request is validated\", function () {",
                                    "    pm.expect(pm.response.json().response).to.equal('validated');",
                                    "});",
                                    "",
                                    "pm.test(\"Organization code matches\", function () {",
                                    "    pm.expect(pm.response.json().organization_code).to.equal(pm.environment.get(\"Organization\"));",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest('Create Hook');"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "a521468d-3b1f-4cb6-88d7-f7cf26d8ee00",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/validateauth/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "validateauth",
                                ""
                            ]
                        },
                        "description": "Simply returns your organization code, name, and a validated status if successful."
                    },
                    "response": [
                        {
                            "id": "a609c812-3f4b-4248-8e45-ca97f57b51bb",
                            "name": "Validate Authentication",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/validateauth/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "validateauth",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Tue, 03 Aug 2021 14:57:36 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"organization_name\": \"PheedLoop Organization\",\n    \"response\": \"validated\",\n    \"organization_code\": \"ORGQ5A4PGNJX5YUL59\"\n}"
                        }
                    ]
                }
            ],
            "id": "71027316-d556-4e45-85d6-19c07db0bb89",
            "description": "You can use this endpoint to validate your authentication with our API. Please follow the steps above and send a `GET` to this endpoint to ensure your API Key and Secret are active.\n\n**Note:** This step is optional and not required to use the API but it is useful when troubleshooting authentication issues. You may also use this endpoint to create a test request before making your real request. If this endpoint fails, no other endpoint will be accepted.",
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.collectionVariables.set(\"REST Hook Fields\", ",
                            "    [",
                            "        'action', ",
                            "        'endpoint',",
                            "        'id'",
                            "    ]",
                            ");"
                        ]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ]
        },
        {
            "name": "Attendees",
            "item": [
                {
                    "name": "List Attendees",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()[\"results\"][0]).to.have.all.keys(pm.collectionVariables.get(\"Event Attendee Fields\"));",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "17444f64-008c-4ff9-8243-7966f7e20306",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendees/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                "{{Event Code}}",
                                "attendees",
                                ""
                            ]
                        },
                        "description": "Lists all Attendees and their information for your chosen event as determined by the Event Code.\n\n##### Pagination\nThis endpoint is paginated with a default size of 500. You may customize the page size with the optional `page_size` query parameter. You may receive a specific page by using the optional `page` query parameter. For example: `?page=2&page_size=10`.\n\n##### Searching & Filtering\nYou may perform custom searches on this endpoint, to filter the data you wish to receive. Fields you are able to search for on this endpoint are:\n\n* first_name\n* last_name\n* email\n* organization \n\nSearches will preform a regex sub string look up, so for example, you may filter the data by anyone with a `@pheedloop.com` email by passing the query `?email=@pheedloop.com`.\n\nSearches are case insensitive."
                    },
                    "response": [
                        {
                            "id": "257b2e3e-64d1-44c6-92e8-e127cb15b104",
                            "name": "List Attendees",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendees/?page_size=1",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "attendees",
                                        ""
                                    ],
                                    "query": [
                                        {
                                            "key": "page_size",
                                            "value": "1"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Thu, 04 Nov 2021 21:08:15 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, POST, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"count\": 2,\n    \"next\": \"{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendees/?page=2&page_size=1\",\n    \"previous\": null,\n    \"results\": [\n        {\n            \"first_name\": \"John\",\n            \"last_name\": \"Hanke\",\n            \"email\": \"john@niantic.com\",\n            \"contact_groups\": [\n                {\n                    \"code\": \"CTGFGAXDT9YCI\",\n                    \"name\": \"Email Blast\",\n                    \"description\": \"Email blasts for new event announcements!\"\n                }\n            ],\n            \"contact_organization\": {\n                \"code\": \"ATTORGWQNUELLV8R\",\n                \"name\": \"Niantic\"\n            },\n            \"membership_tier\": {\n                \"code\": \"MBTLMJH86VTPQ\",\n                \"name\": \"Basic Tier\",\n                \"price\": 100\n            },\n            \"about\": \"The CEO of Niantic.\",\n            \"code\": \"ATTN6EM521N4OJ04MDK7DLPD6HI0\",\n            \"title\": \"CEO\",\n            \"organization\": \"Niantic\",\n            \"address_line_1\": \"1 Ferry Building\",\n            \"address_line_2\": \"Suite 200\",\n            \"address_city\": \"San Francisco\",\n            \"address_state\": \"CA\",\n            \"address_zip\": \"94111\",\n            \"address_country\": \"United States\",\n            \"address_phone\": \"14155708871\",\n            \"code_internal\": \"12345\",\n            \"dietary_restrictions\": \"Gluten\",\n            \"accessibility_requirements\": \"None\",\n            \"designations\": \"Him/His\",\n            \"tags\": [\n                \"TAGOM4HRPPG\"\n            ]\n        }\n    ]\n}"
                        },
                        {
                            "id": "45ae8ab4-0733-4555-93bd-4363057bf018",
                            "name": "Search Attendees",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendees/?first_name=John&last_name=Hanke",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "attendees",
                                        ""
                                    ],
                                    "query": [
                                        {
                                            "key": "first_name",
                                            "value": "John"
                                        },
                                        {
                                            "key": "last_name",
                                            "value": "Hanke"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Fri, 05 Nov 2021 17:42:54 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, POST, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"first_name\": \"John\",\n            \"last_name\": \"Hanke\",\n            \"email\": \"john@niantic.com\",\n            \"contact_groups\": [\n                {\n                    \"code\": \"CTGFGAXDT9YCI\",\n                    \"name\": \"Email Blast\",\n                    \"description\": \"Email blasts for new event announcements!\"\n                }\n            ],\n            \"contact_organization\": {\n                \"code\": \"ATTORGWQNUELLV8R\",\n                \"name\": \"Niantic\"\n            },\n            \"membership_tier\": {\n                \"code\": \"MBTLMJH86VTPQ\",\n                \"name\": \"Basic Tier\",\n                \"price\": 100\n            },\n            \"about\": \"The CEO of Niantic.\",\n            \"code\": \"ATTN6EM521N4OJ04MDK7DLPD6HI0\",\n            \"title\": \"CEO\",\n            \"organization\": \"Niantic\",\n            \"address_line_1\": \"1 Ferry Building\",\n            \"address_line_2\": \"Suite 200\",\n            \"address_city\": \"San Francisco\",\n            \"address_state\": \"CA\",\n            \"address_zip\": \"94111\",\n            \"address_country\": \"United States\",\n            \"address_phone\": \"14155708871\",\n            \"code_internal\": \"12345\",\n            \"dietary_restrictions\": \"Gluten\",\n            \"accessibility_requirements\": \"None\",\n            \"designations\": \"Him/His\",\n            \"tags\": [\n                \"TAGOM4HRPPG\"\n            ]\n        }\n    ]\n}"
                        }
                    ]
                },
                {
                    "name": "Get Single Attendee",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"Event Attendee Fields\"));",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest(\"Update Attendee\");"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "223a02fa-7de8-4a99-ae51-5de0552801ca",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendees/{{Attendee Code}}/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                "{{Event Code}}",
                                "attendees",
                                "{{Attendee Code}}",
                                ""
                            ]
                        },
                        "description": "Gets a single Attendee, based on the Attendee Code used in the URL."
                    },
                    "response": [
                        {
                            "id": "30c0d4bd-0acb-46b5-8db7-6007d49ef321",
                            "name": "Get Single Attendee",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendees/{{Attendee Code}}/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "attendees",
                                        "{{Attendee Code}}",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Fri, 05 Nov 2021 16:03:17 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, PATCH, DELETE, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"first_name\": \"John\",\n    \"last_name\": \"Hanke\",\n    \"email\": \"marty@pheedloop.com\",\n    \"contact_groups\": [\n        {\n            \"code\": \"CTGFGAXDT9YCI\",\n            \"name\": \"Email Blast\",\n            \"description\": \"Email blasts for new event announcements!\"\n        }\n    ],\n    \"contact_organization\": {\n        \"code\": \"ATTORGWQNUELLV8R\",\n        \"name\": \"Niantic\"\n    },\n    \"membership_tier\": {\n        \"code\": \"MBTLMJH86VTPQ\",\n        \"name\": \"Basic Tier\",\n        \"price\": 100\n    },\n    \"about\": \"The CEO of Niantic.\",\n    \"code\": \"{{Attendee Code}}\",\n    \"title\": \"CEO\",\n    \"organization\": \"Niantic\",\n    \"address_line_1\": \"1 Ferry Building\",\n    \"address_line_2\": \"Suite 200\",\n    \"address_city\": \"San Francisco\",\n    \"address_state\": \"CA\",\n    \"address_zip\": \"94111\",\n    \"address_country\": \"United States\",\n    \"address_phone\": \"14155708871\",\n    \"code_internal\": \"12345\",\n    \"dietary_restrictions\": \"Gluten\",\n    \"accessibility_requirements\": \"None\",\n    \"designations\": \"Him/His\",\n    \"tags\": [\n        \"TAGOM4HRPPG\"\n    ]\n}"
                        }
                    ]
                },
                {
                    "name": "Create Attendee",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code == 303) {",
                                    "    pm.test(\"Status code is 303\", function () {",
                                    "        pm.response.to.have.status(303);",
                                    "    });",
                                    "",
                                    "    pm.test(\"All excepted fields are returned\", function () {",
                                    "        pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"Event Attendee Fields 303\"));",
                                    "    });",
                                    "",
                                    "    pm.environment.set(\"Attendee Code\", pm.response.json().additionalInformation);",
                                    "    return",
                                    "};",
                                    "",
                                    "pm.test(\"Status code is either 200 or 201\", function () {",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201])",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"Event Attendee Fields\"));",
                                    "});",
                                    "",
                                    "pm.environment.set(\"Attendee Code\", pm.response.json().code);",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "24347223-ea07-44fd-9488-09fdb59211e9",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"timcook@apple.com\",\n    \"first_name\": \"Tim\",\n    \"last_name\": \"Cook\",\n    \"about\": \"CEO of Apple.\",\n    \"tags\": [\n        \"TAGJFOPSTYT\"\n    ],\n    \"title\": \"CEO\",\n    \"organization\": \"Apple\",\n    \"address_line_1\": \"One Apple Park Way\",\n    \"address_line_2\": \"\",\n    \"address_city\": \"Cupertino\",\n    \"address_state\": \"CA\",\n    \"address_zip\": \"95014\",\n    \"address_country\": \"United States\",\n    \"address_phone\": \"1-800-692-7753\",\n    \"code_internal\": \"CODE\",\n    \"dietary_restrictions\": \"Fruit only.\",\n    \"accessibility_requirements\": \"Requires a personal helicopter\",\n    \"designations\": \"He/Him\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendees/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                "{{Event Code}}",
                                "attendees",
                                ""
                            ]
                        },
                        "description": "Creates a new Attendee and assigns them to your chosen event. If the Attendee is already attending another event in your organization, they are assigned to this event and their information is updated.\n\nWhen an Attendee is updated, a 200 status is returned instead of a 201 status."
                    },
                    "response": [
                        {
                            "id": "a9d84d32-f688-4fee-bc24-0bced233a23d",
                            "name": "Create Attendee",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"email\": \"jeffbezos@amazon.com\",\n    \"first_name\": \"Jeff\",\n    \"last_name\": \"Bezoes\",\n    \"about\": \"CEO and space traveller.\",\n    \"tags\": [\n        \"TAGJFOPSTYT\"\n    ],\n    \"title\": \"CEO & Space Tourist\",\n    \"organization\": \"Amazon\",\n    \"address_line_1\": \"440 Terry Avenue North\",\n    \"address_line_2\": \"\",\n    \"address_city\": \"Seattle\",\n    \"address_state\": \"WA\",\n    \"address_zip\": \"98109\",\n    \"address_country\": \"United States\",\n    \"address_phone\": \"206-266-1000\",\n    \"code_internal\": \"CODE\",\n    \"dietary_restrictions\": \"Vegan\",\n    \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n    \"designations\": \"He/Him\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Attendee Code}}/attendees/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Attendee Code}}",
                                        "attendees",
                                        ""
                                    ]
                                }
                            },
                            "status": "CREATED",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Tue, 03 Aug 2021 15:35:55 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, POST, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"first_name\": \"Jeff\",\n    \"last_name\": \"Bezoes\",\n    \"email\": \"jeffbezos@amazon.com\",\n    \"about\": \"CEO and space traveller.\",\n    \"code\": \"ATT52RJ426BNUE610TN67PT6U9Y3\",\n    \"title\": \"CEO & Space Tourist\",\n    \"organization\": \"Amazon\",\n    \"address_line_1\": \"440 Terry Avenue North\",\n    \"address_line_2\": \"\",\n    \"address_city\": \"Seattle\",\n    \"address_state\": \"WA\",\n    \"address_zip\": \"98109\",\n    \"address_country\": \"United States\",\n    \"address_phone\": \"206-266-1000\",\n    \"code_internal\": \"CODE\",\n    \"dietary_restrictions\": \"Vegan\",\n    \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n    \"designations\": \"He/Him\",\n    \"tags\": [\n        \"TAGJFOPSTYT\"\n    ]\n}"
                        }
                    ]
                },
                {
                    "name": "Bulk Create Attendee",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code == 303 ) {",
                                    "    pm.test(\"Status code is 303\", function () {",
                                    "        pm.response.to.have.status(303);",
                                    "    });",
                                    "",
                                    "    pm.test(\"All excepted fields are returned\", function () {",
                                    "        pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"Event Attendee Fields 303\"));",
                                    "    });",
                                    "",
                                    "    pm.test(\"All excepted fields are returned in additional information\", function () {",
                                    "        pm.expect(pm.response.json().additionalInformation).to.have.all.keys(",
                                    "            [",
                                    "                \"attendeeEmail\",",
                                    "                \"attendeeCode\"",
                                    "            ]",
                                    "        );",
                                    "    });",
                                    "",
                                    "    pm.collectionVariables.set(\"Created Attendee Code 1\", pm.response.json().additionalInformation.attendeeCode);",
                                    "    pm.collectionVariables.set(\"Created Attendee Email 1\", pm.response.json().additionalInformation.attendeeEmail);",
                                    "    return",
                                    "};",
                                    "",
                                    "pm.test(\"Status code is 200 or 201\", function () {",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201])",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()[0]).to.have.all.keys(pm.collectionVariables.get(\"Event Attendee Fields\"));",
                                    "});",
                                    "",
                                    "pm.collectionVariables.set(\"Created Attendee Code 1\", pm.response.json()[0].code);",
                                    "pm.collectionVariables.set(\"Created Attendee Email 1\", pm.response.json()[0].email);",
                                    "pm.collectionVariables.set(\"Created Attendee Code 2\", pm.response.json()[1].code);",
                                    "pm.collectionVariables.set(\"Created Attendee Email 2\", pm.response.json()[1].email);",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest(\"Create Member\");"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "6f107d66-75b8-4191-8f1b-fb4cdeb3ea3b",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"email\": \"john@niantic.com\",\n        \"about\": \"The founder of Niantic.\",\n        \"tags\": [\n            \"TAGJFOPSTYT\"\n        ],\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\"\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"email\": \"jeffbezos@amazon.com\",\n        \"about\": \"CEO and space traveller.\",\n        \"tags\": [\n            \"TAGJFOPSTYT\"\n        ],\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\"\n    }\n]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendeesbulk/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                "{{Event Code}}",
                                "attendeesbulk",
                                ""
                            ]
                        },
                        "description": "Creates several new Attendees and assigns them to your chosen event. If the Attendee is already attending another event in your organization, they are assigned to this event and their information is updated.\n\nAccepts a list of Attendee objects, using the same structure as defined in the [single create](#a5aa8403-9ce8-4135-9214-88890f6080be) endpoint.\n\nIf an existing Attendee is found, it is updated instead of created, and a 200 status is returned instead of a 201 status. If you send over duplicate Attendee (same code on several items), you will only receive a single entry for each actual Attendee in the response."
                    },
                    "response": [
                        {
                            "id": "4085f80d-d7f9-467b-8d3f-5b53fe197749",
                            "name": "Bulk Create Attendee",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"email\": \"john@niantic.com\",\n        \"about\": \"The founder of Niantic.\",\n        \"tags\": [\n            \"TAGJFOPSTYT\"\n        ],\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\"\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"email\": \"jeffbezos@amazon.com\",\n        \"about\": \"CEO and space traveller.\",\n        \"tags\": [\n            \"TAGJFOPSTYT\"\n        ],\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendeesbulk/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "attendeesbulk",
                                        ""
                                    ]
                                }
                            },
                            "status": "CREATED",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Tue, 10 Aug 2021 12:56:39 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "POST, PATCH, DELETE, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"email\": \"john@niantic.com\",\n        \"about\": \"The founder of Niantic.\",\n        \"code\": \"ATT3HBIVHA6TC7UBMM7W80L82KM1\",\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\",\n        \"tags\": [\n            \"TAGJFOPSTYT\"\n        ]\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"email\": \"jeffbezos@amazon.com\",\n        \"about\": \"CEO and space traveller.\",\n        \"code\": \"ATT52RJ426BNUE610TN67PT6U9Y3\",\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\",\n        \"tags\": [\n            \"TAGJFOPSTYT\"\n        ]\n    }\n]"
                        }
                    ]
                },
                {
                    "name": "Update Attendee",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"Event Attendee Fields\"));",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "17fae831-5eb0-4135-aae9-c837cf430bdf",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "PATCH",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"first_name\": \"Jeff\",\n    \"last_name\": \"Bezoes\",\n    \"about\": \"CEO and space traveller.\",\n    \"title\": \"CEO & Space Tourist\",\n    \"organization\": \"Amazon\",\n    \"address_line_1\": \"440 Terry Avenue North\",\n    \"address_line_2\": \"\",\n    \"address_city\": \"Seattle\",\n    \"address_state\": \"WA\",\n    \"address_zip\": \"98109\",\n    \"address_country\": \"United States\",\n    \"address_phone\": \"206-266-1000\",\n    \"code_internal\": \"CODE\",\n    \"dietary_restrictions\": \"No longer vegan\",\n    \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n    \"designations\": \"He/Him\",\n    \"tags\": [\n        \"TAGJFOPSTYT\"\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendees/{{Attendee Code}}/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                "{{Event Code}}",
                                "attendees",
                                "{{Attendee Code}}",
                                ""
                            ]
                        },
                        "description": "Updates the chosen Attendee, but only if they are attending the chosen event. This will update their information across all events they are attending."
                    },
                    "response": [
                        {
                            "id": "85c928f3-dece-49b9-921b-9b962111e518",
                            "name": "Update Attendee",
                            "originalRequest": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"first_name\": \"Jeff\",\n    \"last_name\": \"Bezoes\",\n    \"about\": \"CEO and space traveller.\",\n    \"title\": \"CEO & Space Tourist\",\n    \"organization\": \"Amazon\",\n    \"address_line_1\": \"440 Terry Avenue North\",\n    \"address_line_2\": \"\",\n    \"address_city\": \"Seattle\",\n    \"address_state\": \"WA\",\n    \"address_zip\": \"98109\",\n    \"address_country\": \"United States\",\n    \"address_phone\": \"206-266-1000\",\n    \"code_internal\": \"CODE\",\n    \"dietary_restrictions\": \"No longer vegan\",\n    \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n    \"designations\": \"He/Him\",\n    \"tags\": [\n        \"TAGJFOPSTYT\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendees/{{Attendee Code}}/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "attendees",
                                        "{{Attendee Code}}",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Tue, 03 Aug 2021 15:53:59 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "PATCH, DELETE, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"first_name\": \"Jeff\",\n    \"last_name\": \"Bezoes\",\n    \"email\": \"jeffbezos@amazon.com\",\n    \"about\": \"CEO and space traveller.\",\n    \"code\": \"{{Attendee Code}}\",\n    \"title\": \"CEO & Space Tourist\",\n    \"organization\": \"Amazon\",\n    \"address_line_1\": \"440 Terry Avenue North\",\n    \"address_line_2\": \"\",\n    \"address_city\": \"Seattle\",\n    \"address_state\": \"WA\",\n    \"address_zip\": \"98109\",\n    \"address_country\": \"United States\",\n    \"address_phone\": \"206-266-1000\",\n    \"code_internal\": \"CODE\",\n    \"dietary_restrictions\": \"No longer vegan\",\n    \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n    \"designations\": \"He/Him\",\n    \"tags\": [\n        \"TAGJFOPSTYT\"\n    ]\n}"
                        }
                    ]
                },
                {
                    "name": "Bulk Update Attendee",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()[0]).to.have.all.keys(pm.collectionVariables.get(\"Event Attendee Fields\"));",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest(\"List Members\");"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "994053a8-58b0-4ef3-98b7-0c6eb79d906f",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "PATCH",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"email\": \"john@niantic.com\",\n        \"about\": \"The founder of Niantic.\",\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\",\n        \"tags\": [\n            \"TAGITHJ0Q6X\"\n        ]\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"email\": \"jeffbezos@amazon.com\",\n        \"about\": \"CEO and space traveller.\",\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\",\n        \"tags\": [\n            \"TAGITHJ0Q6X\"\n        ]\n    }\n]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendeesbulk/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                "{{Event Code}}",
                                "attendeesbulk",
                                ""
                            ]
                        },
                        "description": "Updates several Attendees, based on either their code or email. This will update their information across all events they are attending.\n\nAccepts a list of Attendee objects, using the same structure as defined in the [single update](#dbbb7a62-eeed-44fb-9362-d1fb4a29d5b4) endpoint."
                    },
                    "response": [
                        {
                            "id": "16177cd2-bba5-475f-939d-c1b7b76a67d4",
                            "name": "Update with Email",
                            "originalRequest": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"email\": \"john@niantic.com\",\n        \"about\": \"The founder of Niantic.\",\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\",\n        \"tags\": [\n            \"TAGITHJ0Q6X\"\n        ]\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"email\": \"jeffbezos@amazon.com\",\n        \"about\": \"CEO and space traveller.\",\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\",\n        \"tags\": [\n            \"TAGITHJ0Q6X\"\n        ]\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendeesbulk/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "attendeesbulk",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Tue, 10 Aug 2021 13:08:39 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "POST, PATCH, DELETE, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"email\": \"john@niantic.com\",\n        \"about\": \"The founder of Niantic.\",\n        \"code\": \"ATT3HBIVHA6TC7UBMM7W80L82KM1\",\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\",\n        \"tags\": [\n            \"TAGITHJ0Q6X\"\n        ]\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"email\": \"jeffbezos@amazon.com\",\n        \"about\": \"CEO and space traveller.\",\n        \"code\": \"ATT52RJ426BNUE610TN67PT6U9Y3\",\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\",\n        \"tags\": [\n            \"TAGITHJ0Q6X\"\n        ]\n    }\n]"
                        },
                        {
                            "id": "8a0decde-4a5b-483f-9fcd-53932b7908b9",
                            "name": "Update with Code",
                            "originalRequest": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"code\": \"ATT3HBIVHA6TC7UBMM7W80L82KM1\",\n        \"about\": \"The founder of Niantic.\",\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\",\n        \"tags\": [\n            \"TAGITHJ0Q6X\"\n        ]\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"code\": \"ATT52RJ426BNUE610TN67PT6U9Y3\",\n        \"about\": \"CEO and space traveller.\",\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\",\n        \"tags\": [\n            \"TAGITHJ0Q6X\"\n        ]\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendeesbulk/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "attendeesbulk",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Tue, 10 Aug 2021 13:09:22 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "POST, PATCH, DELETE, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"email\": \"john@niantic.com\",\n        \"about\": \"The founder of Niantic.\",\n        \"code\": \"ATT3HBIVHA6TC7UBMM7W80L82KM1\",\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\",\n        \"tags\": [\n            \"TAGITHJ0Q6X\"\n        ]\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"email\": \"jeffbezos@amazon.com\",\n        \"about\": \"CEO and space traveller.\",\n        \"code\": \"ATT52RJ426BNUE610TN67PT6U9Y3\",\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\",\n        \"tags\": [\n            \"TAGITHJ0Q6X\"\n        ]\n    }\n]"
                        }
                    ]
                },
                {
                    "name": "Delete Attendee",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"Event Attendee Fields\"));",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "4f22532d-3588-450f-8cf1-3a2b76b10e2a",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendees/{{Attendee Code}}/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                "{{Event Code}}",
                                "attendees",
                                "{{Attendee Code}}",
                                ""
                            ]
                        },
                        "description": "Removes the Attendee from the chosen event. If the Attendee is still attending other events, they will not be removed from them."
                    },
                    "response": [
                        {
                            "id": "6ae72376-9150-49ac-ab67-0f7c10750d06",
                            "name": "Delete Attendee",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendees/{{Attendee Code}}/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "attendees",
                                        "{{Attendee Code}}",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Tue, 03 Aug 2021 15:47:30 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "PATCH, DELETE, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"first_name\": \"Jeff\",\n    \"last_name\": \"Bezoes\",\n    \"email\": \"jeffbezos@amazon.com\",\n    \"contact_groups\": [\n        {\n            \"code\": \"CTGFGAXDT9YCI\",\n            \"name\": \"Email Blast\",\n            \"description\": \"Email blasts for new event announcements!\"\n        }\n    ],\n    \"contact_organization\": {\n        \"code\": \"ATTORGWQNUELLV8R\",\n        \"name\": \"Niantic\"\n    },\n    \"membership_tier\": {\n        \"code\": \"MBTLMJH86VTPQ\",\n        \"name\": \"Basic Tier\",\n        \"price\": 100.0\n    },\n    \"about\": \"CEO and space traveller.\",\n    \"code\": \"{{Attendee Code}}\",\n    \"title\": \"CEO & Space Tourist\",\n    \"organization\": \"Amazon\",\n    \"address_line_1\": \"440 Terry Avenue North\",\n    \"address_line_2\": \"\",\n    \"address_city\": \"Seattle\",\n    \"address_state\": \"WA\",\n    \"address_zip\": \"98109\",\n    \"address_country\": \"United States\",\n    \"address_phone\": \"206-266-1000\",\n    \"code_internal\": \"CODE\",\n    \"dietary_restrictions\": \"Vegan\",\n    \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n    \"designations\": \"He/Him\",\n    \"tags\": [\n        \"TAGOM4HRPPG\"\n    ]\n}"
                        }
                    ]
                },
                {
                    "name": "Bulk Delete Attendee",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()[0]).to.have.all.keys(pm.collectionVariables.get(\"Event Attendee Fields\"));",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest(\"List Events\");"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "5a583621-0f8d-4731-b882-7c4064651248",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"codes\": [\n        \"{{Created Attendee Code 1}}\",\n        \"{{Created Attendee Code 2}}\",\n        \"{{Member Code}}\",\n        \"{{Created Member Code 1}}\",\n        \"{{Created Member Code 2}}\"\n        \n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendeesbulk/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                "{{Event Code}}",
                                "attendeesbulk",
                                ""
                            ]
                        },
                        "description": "Removes the list of Attendees from the chosen event. If the Attendee is still attending other events, they will not be removed from them.\n\nAccepts an object with a key of `codes`. This key should contain a list of Attendee (or Member) codes, to be deleted. \n\nThe endpoint returns all attendees deleted.\n\nIf a passed Attendee Code can not be found, that Attendee will not be removed from your Event. Instead an entry in the response list with the first key of 'warning' and a value of `Attendees not found` will be added. This entry will contain a list of codes for all missing Attendees. It is a good idea to check if this object exists in the response to validate all expected Attendees are removed.\n\nIf other Attendees were removed successfully, they will still be returned as normal (alongside the warning object) in the response."
                    },
                    "response": [
                        {
                            "id": "5114eb68-aefe-40d7-bddc-e0d63ec5752e",
                            "name": "Bulk Delete Attendee",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"codes\": [\n        \"{{Created Attendee Code 1}}\",\n        \"{{Created Attendee Code 2}}\"\n        \n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendeesbulk/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "attendeesbulk",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Fri, 05 Nov 2021 17:27:02 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "POST, PATCH, DELETE, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "[\n    {\n        \"first_name\": \"Tim\",\n        \"last_name\": \"Cook\",\n        \"email\": \"timcook1@apple.com\",\n        \"contact_groups\": [\n            {\n                \"code\": \"CTGFGAXDT9YCI\",\n                \"name\": \"Email Blast\",\n                \"description\": \"Email blasts for new event announcements!\"\n            }\n        ],\n        \"contact_organization\": {\n            \"code\": \"ATTORGWQNUELLV8R\",\n            \"name\": \"Niantic\"\n        },\n        \"membership_tier\": {\n            \"code\": \"MBTLMJH86VTPQ\",\n            \"name\": \"Basic Tier\",\n            \"price\": 100.0\n        },\n        \"about\": \"CEO of Apple.\",\n        \"code\": \"{{Created Attendee Code 1}}\",\n        \"title\": \"CEO\",\n        \"organization\": \"Apple\",\n        \"address_line_1\": \"One Apple Park Way\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Cupertino\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"95014\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"1-800-692-7753\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fruit only.\",\n        \"accessibility_requirements\": \"Requires a personal helicopter\",\n        \"designations\": \"He/Him\",\n        \"tags\": [\n            \"TAGOM4HRPPG\"\n        ]\n    },\n    {\n        \"first_name\": \"Tim\",\n        \"last_name\": \"Cook\",\n        \"email\": \"timcook2@apple.com\",\n        \"contact_groups\": [\n            {\n                \"code\": \"CTGFGAXDT9YCI\",\n                \"name\": \"Email Blast\",\n                \"description\": \"Email blasts for new event announcements!\"\n            }\n        ],\n        \"contact_organization\": {\n            \"code\": \"ATTORGWQNUELLV8R\",\n            \"name\": \"Niantic\"\n        },\n        \"membership_tier\": {\n            \"code\": \"MBTLMJH86VTPQ\",\n            \"name\": \"Basic Tier\",\n            \"price\": 100.0\n        },\n        \"about\": \"CEO of Apple.\",\n        \"code\": \"{{Created Attendee Code 2}}\",\n        \"title\": \"CEO\",\n        \"organization\": \"Apple\",\n        \"address_line_1\": \"One Apple Park Way\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Cupertino\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"95014\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"1-800-692-7753\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fruit only.\",\n        \"accessibility_requirements\": \"Requires a personal helicopter\",\n        \"designations\": \"He/Him\",\n        \"tags\": [\n            \"TAGOM4HRPPG\"\n        ]\n    }\n]"
                        },
                        {
                            "id": "705d4afa-e807-4f99-88c5-6f5d5bf619ee",
                            "name": "Bulk Delete Missing Attendees",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"codes\": [\n        \"{{Created Attendee Code 1}}\",\n        \"{{Created Attendee Code 2}}\",\n        \"{{Member Code}}\",\n        \"{{Created Member Code 1}}\",\n        \"{{Created Member Code 2}}\"\n        \n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/attendeesbulk/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "attendeesbulk",
                                        ""
                                    ]
                                }
                            },
                            "status": "NOT FOUND",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Fri, 05 Nov 2021 17:22:28 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "POST, PATCH, DELETE, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "[\n    {\n        \"warning\": \"Attendees not found\",\n        \"codes\": [\n            \"ATTU11MS9L17Y8ZSJSBQU59RKUMQ\",\n            \"ATTXKYDNFC19N1I9JH2PXM9K396I\",\n            \"ATTQGT9DDFU3V9EOFP5VSIKMPAZG\",\n            \"ATTU11MS9L17Y8ZSJSBQU59RKUMQ\",\n            \"ATTXKYDNFC19N1I9JH2PXM9K396I\"\n        ]\n    }\n]"
                        }
                    ]
                }
            ],
            "id": "89ae3c0e-3fc7-4159-af51-1a1eaa60d7e2",
            "description": "An Attendee in PheedLoop are your users that attend an event. When a user registers for your event, they either have an Attendee profile created if they are a new user, or their existing Attendee profile is updated to show they are now attending the new event.\n\nAttendees and Members share the same underlying data model, but the object is referred to as an Attendee when dealing with Event level interactions, and a Member when dealing with Organization level interactions.\n\nAttendees can be viewed in the Dashboard under your chosen **Event -> Attendees**. This is the list of all Attendees currently attending your event. To see all Attendees accross all your events (aka Members) please refer to [Members](#3811989c-52b6-44bc-bd53-ff6c9ec26882).\n\nSeveral endpoints are available for getting, creating, updating, and deleting Attendees within the PheedLoop system. All of the Attendee endpoints are event specific and require an `event_code` in their URL.",
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.collectionVariables.set(\"Event Attendee Fields\", ",
                            "    [",
                            "        'first_name', ",
                            "        'last_name',",
                            "        'email',",
                            "        'contact_groups',",
                            "        'contact_organization',",
                            "        'membership_tier',",
                            "        'about', ",
                            "        'code',",
                            "        'title',",
                            "        'organization', ",
                            "        'address_line_1',",
                            "        'address_line_2',",
                            "        'address_city', ",
                            "        'address_state',",
                            "        'address_zip',",
                            "        'address_country', ",
                            "        'address_phone',",
                            "        'code_internal',",
                            "        'dietary_restrictions', ",
                            "        'accessibility_requirements',",
                            "        'designations',",
                            "        'tags'",
                            "    ]",
                            ");",
                            "",
                            "pm.collectionVariables.set(\"Event Attendee Fields 303\", ",
                            "    [",
                            "        'message', ",
                            "        'additionalInformation',",
                            "    ]",
                            ");",
                            ""
                        ]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ]
        },
        {
            "name": "Members",
            "item": [
                {
                    "name": "List Members",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()[\"results\"][0]).to.have.all.keys(pm.collectionVariables.get(\"Organization Attendee Fields\"));",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "96c6ba50-00ed-48cc-97ca-15abd3ac24a2",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/members/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "members",
                                ""
                            ]
                        },
                        "description": "Returns a list of Members (both across all your events and just in the Members list). Included is an `events_attended` field to help filter and sort if desired.\n\n##### Pagination\nThis endpoint is paginated with a default size of 500. You may customize the page size with the optional `page_size` query parameter. You may receive a specific page by using the optional `page` query parameter. For example: `?page=2&page_size=10`.\n\n##### Searching & Filtering\nYou may perform custom searches on this endpoint, to filter the data you wish to receive. Fields you are able to search for on this endpoint are:\n\n* first_name\n* last_name\n* email\n* organization \n\nSearches will preform a regex sub string look up, so for example, you may filter the data by anyone with a `@pheedloop.com` email by passing the query `?email=@pheedloop.com`.\n\nSearches are case insensitive."
                    },
                    "response": [
                        {
                            "id": "8ea68145-f110-4c50-aecb-f64a373a1b48",
                            "name": "List Members",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/members/?page_size=1",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "members",
                                        ""
                                    ],
                                    "query": [
                                        {
                                            "key": "page_size",
                                            "value": "1"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Thu, 04 Nov 2021 21:21:54 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, POST, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"count\": 2,\n    \"next\": \"{{Base URL}}api/v3/organization/ORGRZ6WCVEX29YC73F/members/?page=2&page_size=1\",\n    \"previous\": null,\n    \"results\": [\n        {\n            \"first_name\": \"John\",\n            \"last_name\": \"Hanke\",\n            \"email\": \"john@niantic.com\",\n            \"contact_groups\": [\n                {\n                    \"code\": \"CTGFGAXDT9YCI\",\n                    \"name\": \"Email Blast\",\n                    \"description\": \"Email blasts for new event announcements!\"\n                }\n            ],\n            \"contact_organization\": {\n                \"code\": \"ATTORGWQNUELLV8R\",\n                \"name\": \"Niantic\"\n            },\n            \"membership_tier\": {\n                \"code\": \"MBTLMJH86VTPQ\",\n                \"name\": \"Basic Tier\",\n                \"price\": 100\n            },\n            \"about\": \"The CEO of Niantic.\",\n            \"code\": \"ATTN6EM521N4OJ04MDK7DLPD6HI0\",\n            \"title\": \"CEO\",\n            \"organization\": \"Niantic\",\n            \"address_line_1\": \"1 Ferry Building\",\n            \"address_line_2\": \"Suite 200\",\n            \"address_city\": \"San Francisco\",\n            \"address_state\": \"CA\",\n            \"address_zip\": \"94111\",\n            \"address_country\": \"United States\",\n            \"address_phone\": \"14155708871\",\n            \"code_internal\": \"12345\",\n            \"dietary_restrictions\": \"Gluten\",\n            \"accessibility_requirements\": \"None\",\n            \"designations\": \"Him/His\",\n            \"events_attended\": [\n                \"EVEPLTXAWUFQQ\",\n                \"EVEMQGSRJKNHG\",\n                \"EVEDSYUXBMTBU\"\n            ]\n        }\n    ]\n}"
                        },
                        {
                            "id": "b780d105-8bbc-43d4-ad30-52f2c66317a0",
                            "name": "Search Members",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/members/?first_name=John&last_name=Hanke",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "members",
                                        ""
                                    ],
                                    "query": [
                                        {
                                            "key": "first_name",
                                            "value": "John"
                                        },
                                        {
                                            "key": "last_name",
                                            "value": "Hanke"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Fri, 05 Nov 2021 18:43:31 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, POST, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"first_name\": \"John\",\n            \"last_name\": \"Hanke\",\n            \"email\": \"john@niantic.com\",\n            \"contact_groups\": [\n                {\n                    \"code\": \"CTGFGAXDT9YCI\",\n                    \"name\": \"Email Blast\",\n                    \"description\": \"Email blasts for new event announcements!\"\n                }\n            ],\n            \"contact_organization\": {\n                \"code\": \"ATTORGWQNUELLV8R\",\n                \"name\": \"Niantic\"\n            },\n            \"membership_tier\": {\n                \"code\": \"MBTLMJH86VTPQ\",\n                \"name\": \"Basic Tier\",\n                \"price\": 100\n            },\n            \"about\": \"CEO of Niantic\",\n            \"code\": \"ATTP9AQV8S1U6DV3A94N9L61QBT3\",\n            \"title\": \"CEO\",\n            \"organization\": \"Niantic\",\n            \"address_line_1\": \"1 Ferry Building\",\n            \"address_line_2\": \"Suite 200\",\n            \"address_city\": \"San Francisco\",\n            \"address_state\": \"CA\",\n            \"address_zip\": \"94111\",\n            \"address_country\": \"United States\",\n            \"address_phone\": \"14155708871\",\n            \"code_internal\": \"12345\",\n            \"dietary_restrictions\": \"Gluten\",\n            \"accessibility_requirements\": \"None\",\n            \"designations\": \"Him/His\",\n            \"events_attended\": [\n                \"EVEMQGSRJKNHG\",\n                \"EVEDSYUXBMTBU\"\n            ]\n        }\n    ]\n}"
                        }
                    ]
                },
                {
                    "name": "Get Single Member",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"Organization Attendee Fields\"));",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest(\"Update Member\");"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "baf4063b-4706-444d-93f3-12fed8300094",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/members/{{Member Code}}/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "members",
                                "{{Member Code}}",
                                ""
                            ]
                        },
                        "description": "Gets a single Member, based on the Member Code used in the URL."
                    },
                    "response": [
                        {
                            "id": "0749b9d1-7cea-4f6c-a731-ac56d443cfd6",
                            "name": "Get Single Member",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/members/{{Member Code}}/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "members",
                                        "{{Member Code}}",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Fri, 05 Nov 2021 16:04:58 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, PATCH, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"first_name\": \"John\",\n    \"last_name\": \"Hanke\",\n    \"email\": \"john@niantic.com\",\n    \"contact_groups\": [\n        {\n            \"code\": \"CTGFGAXDT9YCI\",\n            \"name\": \"Email Blast\",\n            \"description\": \"Email blasts for new event announcements!\"\n        }\n    ],\n    \"contact_organization\": {\n        \"code\": \"ATTORGWQNUELLV8R\",\n        \"name\": \"Niantic\"\n    },\n    \"membership_tier\": {\n        \"code\": \"MBTLMJH86VTPQ\",\n        \"name\": \"Basic Tier\",\n        \"price\": 100\n    },\n    \"about\": \"The CEO of Niantic.\",\n    \"code\": \"{{Member Code}}\",\n    \"title\": \"CEO\",\n    \"organization\": \"Niantic\",\n    \"address_line_1\": \"1 Ferry Building\",\n    \"address_line_2\": \"Suite 200\",\n    \"address_city\": \"San Francisco\",\n    \"address_state\": \"CA\",\n    \"address_zip\": \"94111\",\n    \"address_country\": \"United States\",\n    \"address_phone\": \"14155708871\",\n    \"code_internal\": \"12345\",\n    \"dietary_restrictions\": \"Gluten\",\n    \"accessibility_requirements\": \"None\",\n    \"designations\": \"Him/His\",\n    \"events_attended\": [\n        \"EVEPLTXAWUFQQ\",\n        \"EVEMQGSRJKNHG\",\n        \"EVEDSYUXBMTBU\"\n    ]\n}"
                        }
                    ]
                },
                {
                    "name": "Create Member",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code == 303) {",
                                    "    pm.test(\"Status code is 303\", function () {",
                                    "        pm.response.to.have.status(303);",
                                    "    });",
                                    "",
                                    "    pm.test(\"All excepted fields are returned\", function () {",
                                    "        pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"Organization Attendee Fields 303\"));",
                                    "    });",
                                    "",
                                    "    pm.environment.set(\"Attendee Code\", pm.response.json().additionalInformation);",
                                    "    return",
                                    "};",
                                    "",
                                    "pm.test(\"Status code is either 200 or 201\", function () {",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201])",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"Organization Attendee Fields\"));",
                                    "});",
                                    "",
                                    "pm.environment.set(\"Member Code\", pm.response.json().code);",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "47241150-8789-4cce-969e-57f0342eab58",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"timcook@apple.com\",\n    \"first_name\": \"Tim\",\n    \"last_name\": \"Cook\",\n    \"about\": \"CEO of Apple.\",\n    \"tags\": [\n        \"TAGJFOPSTYT\"\n    ],\n    \"title\": \"CEO\",\n    \"organization\": \"Apple\",\n    \"address_line_1\": \"One Apple Park Way\",\n    \"address_line_2\": \"\",\n    \"address_city\": \"Cupertino\",\n    \"address_state\": \"CA\",\n    \"address_zip\": \"95014\",\n    \"address_country\": \"United States\",\n    \"address_phone\": \"1-800-692-7753\",\n    \"code_internal\": \"CODE\",\n    \"dietary_restrictions\": \"Fruit only.\",\n    \"accessibility_requirements\": \"Requires a personal helicopter\",\n    \"designations\": \"He/Him\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/members/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "members",
                                ""
                            ]
                        },
                        "description": "Creates a new Member for your organization.\n\nWhen a Member is updated, a 200 status is returned instead of a 201 status."
                    },
                    "response": [
                        {
                            "id": "29458d9d-d255-4623-a474-11a91a4d04f4",
                            "name": "Create Member Created",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"email\": \"timcook@apple.com\",\n    \"first_name\": \"Tim\",\n    \"last_name\": \"Cook\",\n    \"about\": \"CEO of Apple.\",\n    \"tags\": [\n        \"TAGJFOPSTYT\"\n    ],\n    \"title\": \"CEO\",\n    \"organization\": \"Apple\",\n    \"address_line_1\": \"One Apple Park Way\",\n    \"address_line_2\": \"\",\n    \"address_city\": \"Cupertino\",\n    \"address_state\": \"CA\",\n    \"address_zip\": \"95014\",\n    \"address_country\": \"United States\",\n    \"address_phone\": \"1-800-692-7753\",\n    \"code_internal\": \"CODE\",\n    \"dietary_restrictions\": \"Fruit only.\",\n    \"accessibility_requirements\": \"Requires a personal helicopter\",\n    \"designations\": \"He/Him\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/members/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "members",
                                        ""
                                    ]
                                }
                            },
                            "status": "CREATED",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Fri, 05 Nov 2021 16:18:18 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, POST, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"first_name\": \"Tim\",\n    \"last_name\": \"Cook\",\n    \"email\": \"timcook@apple.com\",\n    \"contact_groups\": [],\n    \"contact_organization\": null,\n    \"membership_tier\": null,\n    \"about\": \"CEO of Apple.\",\n    \"code\": \"ATTQGT9DDFU3V9EOFP5VSIKMPAZG\",\n    \"title\": \"CEO\",\n    \"organization\": \"Apple\",\n    \"address_line_1\": \"One Apple Park Way\",\n    \"address_line_2\": \"\",\n    \"address_city\": \"Cupertino\",\n    \"address_state\": \"CA\",\n    \"address_zip\": \"95014\",\n    \"address_country\": \"United States\",\n    \"address_phone\": \"1-800-692-7753\",\n    \"code_internal\": \"CODE\",\n    \"dietary_restrictions\": \"Fruit only.\",\n    \"accessibility_requirements\": \"Requires a personal helicopter\",\n    \"designations\": \"He/Him\",\n    \"events_attended\": []\n}"
                        },
                        {
                            "id": "7ce29da9-e937-4d8c-9659-fbef554231d3",
                            "name": "Create Member Updated",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"email\": \"timcook@apple.com\",\n    \"first_name\": \"Tim\",\n    \"last_name\": \"Cook\",\n    \"about\": \"CEO of Apple.\",\n    \"tags\": [\n        \"TAGJFOPSTYT\"\n    ],\n    \"title\": \"CEO\",\n    \"organization\": \"Apple\",\n    \"address_line_1\": \"One Apple Park Way\",\n    \"address_line_2\": \"\",\n    \"address_city\": \"Cupertino\",\n    \"address_state\": \"CA\",\n    \"address_zip\": \"95014\",\n    \"address_country\": \"United States\",\n    \"address_phone\": \"1-800-692-7753\",\n    \"code_internal\": \"CODE\",\n    \"dietary_restrictions\": \"Fruit only.\",\n    \"accessibility_requirements\": \"Requires a personal helicopter\",\n    \"designations\": \"He/Him\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/members/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "members",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Fri, 05 Nov 2021 16:18:18 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, POST, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"first_name\": \"Tim\",\n    \"last_name\": \"Cook\",\n    \"email\": \"timcook@apple.com\",\n    \"contact_groups\": [\n        {\n            \"code\": \"CTGFGAXDT9YCI\",\n            \"name\": \"Email Blast\",\n            \"description\": \"Email blasts for new event announcements!\"\n        }\n    ],\n    \"contact_organization\": {\n        \"code\": \"ATTORGWQNUELLV8R\",\n        \"name\": \"Niantic\"\n    },\n    \"membership_tier\": {\n        \"code\": \"MBTLMJH86VTPQ\",\n        \"name\": \"Basic Tier\",\n        \"price\": 100\n    },\n    \"about\": \"CEO of Apple.\",\n    \"code\": \"ATTQGT9DDFU3V9EOFP5VSIKMPAZG\",\n    \"title\": \"CEO\",\n    \"organization\": \"Apple\",\n    \"address_line_1\": \"One Apple Park Way\",\n    \"address_line_2\": \"\",\n    \"address_city\": \"Cupertino\",\n    \"address_state\": \"CA\",\n    \"address_zip\": \"95014\",\n    \"address_country\": \"United States\",\n    \"address_phone\": \"1-800-692-7753\",\n    \"code_internal\": \"CODE\",\n    \"dietary_restrictions\": \"Fruit only.\",\n    \"accessibility_requirements\": \"Requires a personal helicopter\",\n    \"designations\": \"He/Him\",\n    \"events_attended\": [\n        \"EVEMQGSRJKNHG\",\n        \"EVEDSYUXBMTBU\"\n    ]\n}"
                        }
                    ]
                },
                {
                    "name": "Bulk Create Member",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200 or 201\", function () {",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201])",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()[0]).to.have.all.keys(pm.collectionVariables.get(\"Organization Attendee Fields\"));",
                                    "});",
                                    "",
                                    "pm.collectionVariables.set(\"Created Member Code 1\", pm.response.json()[0].code);",
                                    "pm.collectionVariables.set(\"Created Member Email 1\", pm.response.json()[0].email);",
                                    "pm.collectionVariables.set(\"Created Member Code 2\", pm.response.json()[1].code);",
                                    "pm.collectionVariables.set(\"Created Member Email 2\", pm.response.json()[1].email);",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest(\"List Attendees\");"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "cf10310f-270f-43df-86e0-a8b158cf300e",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"email\": \"john@niantic.com\",\n        \"about\": \"The founder of Niantic.\",\n        \"tags\": [\n            \"TAGJFOPSTYT\"\n        ],\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\"\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"email\": \"jeffbezos@amazon.com\",\n        \"about\": \"CEO and space traveller.\",\n        \"tags\": [\n            \"TAGJFOPSTYT\"\n        ],\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\"\n    }\n]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/membersbulk/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "membersbulk",
                                ""
                            ]
                        },
                        "description": "Creates several new Members for your organization.\n\nAccepts a list of Member objects, using the same structure as defined in the [single create](#3baf2310-9c9e-4c40-85f6-c17e00f0411c) endpoint.\n\nIf an existing Member is found, it is updated instead of created, and a 200 status is returned instead of a 201 status. If you send over duplicate Members (using the same `code` field across several entries), you will only receive a single entry for each actual Member on the response."
                    },
                    "response": [
                        {
                            "id": "51ea9fda-3c31-4596-afa3-17a08be8b879",
                            "name": "Bulk Create Member Created",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"email\": \"john@niantic.com\",\n        \"about\": \"The founder of Niantic.\",\n        \"tags\": [\n            \"TAGJFOPSTYT\"\n        ],\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\"\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"email\": \"jeffbezos@amazon.com\",\n        \"about\": \"CEO and space traveller.\",\n        \"tags\": [\n            \"TAGJFOPSTYT\"\n        ],\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/membersbulk/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "membersbulk",
                                        ""
                                    ]
                                }
                            },
                            "status": "CREATED",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Fri, 05 Nov 2021 16:21:13 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "POST, PATCH, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"email\": \"john@niantic.com\",\n        \"contact_groups\": [],\n        \"contact_organization\": null,\n        \"membership_tier\": null,\n        \"about\": \"The founder of Niantic.\",\n        \"code\": \"ATTU11MS9L17Y8ZSJSBQU59RKUMQ\",\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\",\n        \"events_attended\": []\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"email\": \"jeffbezos@amazon.com\",\n        \"contact_groups\": [],\n        \"contact_organization\": null,\n        \"membership_tier\": null,\n        \"about\": \"CEO and space traveller.\",\n        \"code\": \"ATTXKYDNFC19N1I9JH2PXM9K396I\",\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\",\n        \"events_attended\": []\n    }\n]"
                        },
                        {
                            "id": "505c11c0-c2ae-4eb4-ac7c-2cf4fb17fbe8",
                            "name": "Bulk Create Member Updated",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"email\": \"john@niantic.com\",\n        \"about\": \"The founder of Niantic.\",\n        \"tags\": [\n            \"TAGJFOPSTYT\"\n        ],\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\"\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"email\": \"jeffbezos@amazon.com\",\n        \"about\": \"CEO and space traveller.\",\n        \"tags\": [\n            \"TAGJFOPSTYT\"\n        ],\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/membersbulk/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "membersbulk",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Fri, 05 Nov 2021 16:21:13 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "POST, PATCH, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"email\": \"john@niantic.com\",\n        \"contact_groups\": [\n            {\n                \"code\": \"CTGFGAXDT9YCI\",\n                \"name\": \"Email Blast\",\n                \"description\": \"Email blasts for new event announcements!\"\n            }\n        ],\n        \"contact_organization\": {\n            \"code\": \"ATTORGWQNUELLV8R\",\n            \"name\": \"Niantic\"\n        },\n        \"membership_tier\": {\n            \"code\": \"MBTLMJH86VTPQ\",\n            \"name\": \"Basic Tier\",\n            \"price\": 100\n        },\n        \"about\": \"The founder of Niantic.\",\n        \"code\": \"ATTU11MS9L17Y8ZSJSBQU59RKUMQ\",\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\",\n        \"events_attended\": [\n            \"EVEMQGSRJKNHG\",\n            \"EVEDSYUXBMTBU\"\n        ]\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"email\": \"jeffbezos@amazon.com\",\n        \"contact_groups\": [],\n        \"contact_organization\": null,\n        \"membership_tier\": null,\n        \"about\": \"CEO and space traveller.\",\n        \"code\": \"ATTXKYDNFC19N1I9JH2PXM9K396I\",\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\",\n        \"events_attended\": [\n            \"EVEMQGSRJKNHG\",\n            \"EVEDSYUXBMTBU\"\n        ]\n    }\n]"
                        }
                    ]
                },
                {
                    "name": "Update Member",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    let fieldsToValidate = pm.collectionVariables.get(\"Organization Attendee Fields\");",
                                    "    let updateFieldsToValidate = [];",
                                    "    fieldsToValidate.forEach(field => {",
                                    "        if (![\"email\", \"events_attended\"].includes(field)) {",
                                    "            updateFieldsToValidate.push(field)",
                                    "        }",
                                    "    });",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(updateFieldsToValidate);",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "4c31a054-3777-422d-9eef-3fbaa7146509",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "PATCH",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"first_name\": \"John\",\n    \"last_name\": \"Hanke\",\n    \"email\": \"john@niantic.com\",\n    \"about\": \"The founder of Niantic.\",\n    \"title\": \"CEO\",\n    \"organization\": \"Niantic\",\n    \"address_line_1\": \"1 Ferry Building\",\n    \"address_line_2\": \"Suite 200\",\n    \"address_city\": \"San Francisco\",\n    \"address_state\": \"CA\",\n    \"address_zip\": \"94111\",\n    \"address_country\": \"United States\",\n    \"address_phone\": \"4155708871\",\n    \"code_internal\": \"CODE\",\n    \"dietary_restrictions\": \"Fish only\",\n    \"accessibility_requirements\": \"Must be by the water.\",\n    \"designations\": \"He/Him\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/members/{{Attendee Code}}/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "members",
                                "{{Attendee Code}}",
                                ""
                            ]
                        },
                        "description": "Update a single Member, based on their code. This will change the Member across all events they are a part of."
                    },
                    "response": [
                        {
                            "id": "d073d36f-9045-4a36-97b0-85862f1b102f",
                            "name": "Update Member",
                            "originalRequest": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"first_name\": \"John\",\n    \"last_name\": \"Hanke\",\n    \"email\": \"john@niantic.com\",\n    \"about\": \"The founder of Niantic.\",\n    \"title\": \"CEO\",\n    \"organization\": \"Niantic\",\n    \"address_line_1\": \"1 Ferry Building\",\n    \"address_line_2\": \"Suite 200\",\n    \"address_city\": \"San Francisco\",\n    \"address_state\": \"CA\",\n    \"address_zip\": \"94111\",\n    \"address_country\": \"United States\",\n    \"address_phone\": \"4155708871\",\n    \"code_internal\": \"CODE\",\n    \"dietary_restrictions\": \"Fish only\",\n    \"accessibility_requirements\": \"Must be by the water.\",\n    \"designations\": \"He/Him\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/members/{{Member Code}}/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "members",
                                        "{{Member Code}}",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Tue, 03 Aug 2021 15:44:31 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "PATCH, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"first_name\": \"John\",\n    \"last_name\": \"Hanke\",\n    \"email\": \"john@niantic.com\",\n    \"about\": \"The founder of Niantic.\",\n    \"code\": \"{{Member Code}}\",\n    \"title\": \"CEO\",\n    \"organization\": \"Niantic\",\n    \"address_line_1\": \"1 Ferry Building\",\n    \"address_line_2\": \"Suite 200\",\n    \"address_city\": \"San Francisco\",\n    \"address_state\": \"CA\",\n    \"address_zip\": \"94111\",\n    \"address_country\": \"United States\",\n    \"address_phone\": \"4155708871\",\n    \"code_internal\": \"CODE\",\n    \"dietary_restrictions\": \"Fish only\",\n    \"accessibility_requirements\": \"Must be by the water.\",\n    \"designations\": \"He/Him\"\n}"
                        }
                    ]
                },
                {
                    "name": "Bulk Update Member",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    let fieldsToValidate = pm.collectionVariables.get(\"Organization Attendee Fields\");",
                                    "    let updateFieldsToValidate = [];",
                                    "    fieldsToValidate.forEach(field => {",
                                    "        if (![\"events_attended\"].includes(field)) {",
                                    "            updateFieldsToValidate.push(field)",
                                    "        }",
                                    "    });",
                                    "    pm.expect(pm.response.json()[0]).to.have.all.keys(updateFieldsToValidate);",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "f1eb0452-28b0-4be9-8d5a-932bc3df6668",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "PATCH",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"code\": \"{{Created Attendee Code 1}}\",\n        \"about\": \"The founder of Niantic.\",\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\"\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"code\": \"{{Created Attendee Code 2}}\",\n        \"about\": \"CEO and space traveller.\",\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\"\n    }\n]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/membersbulk/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "membersbulk",
                                ""
                            ]
                        },
                        "description": "Updates several Members, based on either their code or email. This will change the Member across all events they are a part of.\n\nAccepts a list of Member objects, using the same structure as defined in the [single update](#eaf36595-1e89-4d25-819c-7def9203539d) endpoint."
                    },
                    "response": [
                        {
                            "id": "0a258003-0328-4361-9f51-d247393258a0",
                            "name": "Update with Email",
                            "originalRequest": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"email\": \"john@niantic.com\",\n        \"about\": \"The founder of Niantic.\",\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\"\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"email\": \"jeffbezos@amazon.com\",\n        \"about\": \"CEO and space traveller.\",\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/membersbulk/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "membersbulk",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Mon, 09 Aug 2021 20:44:12 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "PATCH, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"email\": \"john@niantic.com\",\n        \"contact_groups\": [\n            {\n                \"code\": \"CTGFGAXDT9YCI\",\n                \"name\": \"Email Blast\",\n                \"description\": \"Email blasts for new event announcements!\"\n            }\n        ],\n        \"contact_organization\": {\n            \"code\": \"ATTORGWQNUELLV8R\",\n            \"name\": \"Niantic\"\n        },\n        \"membership_tier\": {\n            \"code\": \"MBTLMJH86VTPQ\",\n            \"name\": \"Basic Tier\",\n            \"price\": 100\n        },\n        \"about\": \"The founder of Niantic.\",\n        \"code\": \"ATT3HBIVHA6TC7UBMM7W80L82KM1\",\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\"\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"email\": \"jeffbezos@amazon.com\",\n        \"contact_groups\": [\n            {\n                \"code\": \"CTGFGAXDT9YCI\",\n                \"name\": \"Email Blast\",\n                \"description\": \"Email blasts for new event announcements!\"\n            }\n        ],\n        \"contact_organization\": {\n            \"code\": \"ATTORGWQNUELLV8R\",\n            \"name\": \"Niantic\"\n        },\n        \"membership_tier\": {\n            \"code\": \"MBTLMJH86VTPQ\",\n            \"name\": \"Basic Tier\",\n            \"price\": 100\n        },\n        \"about\": \"CEO and space traveller.\",\n        \"code\": \"ATT52RJ426BNUE610TN67PT6U9Y3\",\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\"\n    }\n]"
                        },
                        {
                            "id": "ae02c834-3ba0-4825-a4ce-aa6241c5c092",
                            "name": "Update with Code",
                            "originalRequest": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"code\": \"ATT3HBIVHA6TC7UBMM7W80L82KM1\",\n        \"about\": \"The founder of Niantic.\",\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\"\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"code\": \"ATT52RJ426BNUE610TN67PT6U9Y3\",\n        \"about\": \"CEO and space traveller.\",\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/membersbulk/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "membersbulk",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Mon, 09 Aug 2021 20:45:50 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "PATCH, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "[\n    {\n        \"first_name\": \"John\",\n        \"last_name\": \"Hanke\",\n        \"email\": \"john@niantic.com\",\n        \"contact_groups\": [\n            {\n                \"code\": \"CTGFGAXDT9YCI\",\n                \"name\": \"Email Blast\",\n                \"description\": \"Email blasts for new event announcements!\"\n            }\n        ],\n        \"contact_organization\": {\n            \"code\": \"ATTORGWQNUELLV8R\",\n            \"name\": \"Niantic\"\n        },\n        \"membership_tier\": {\n            \"code\": \"MBTLMJH86VTPQ\",\n            \"name\": \"Basic Tier\",\n            \"price\": 100\n        },\n        \"about\": \"The founder of Niantic.\",\n        \"code\": \"ATT3HBIVHA6TC7UBMM7W80L82KM1\",\n        \"title\": \"CEO\",\n        \"organization\": \"Niantic\",\n        \"address_line_1\": \"1 Ferry Building\",\n        \"address_line_2\": \"Suite 200\",\n        \"address_city\": \"San Francisco\",\n        \"address_state\": \"CA\",\n        \"address_zip\": \"94111\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"4155708871\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Fish only\",\n        \"accessibility_requirements\": \"Must be by the water.\",\n        \"designations\": \"He/Him\"\n    },\n    {\n        \"first_name\": \"Jeff\",\n        \"last_name\": \"Bezoes\",\n        \"email\": \"jeffbezos@amazon.com\",\n        \"contact_groups\": [\n            {\n                \"code\": \"CTGFGAXDT9YCI\",\n                \"name\": \"Email Blast\",\n                \"description\": \"Email blasts for new event announcements!\"\n            }\n        ],\n        \"contact_organization\": {\n            \"code\": \"ATTORGWQNUELLV8R\",\n            \"name\": \"Niantic\"\n        },\n        \"membership_tier\": {\n            \"code\": \"MBTLMJH86VTPQ\",\n            \"name\": \"Basic Tier\",\n            \"price\": 100\n        },\n        \"about\": \"CEO and space traveller.\",\n        \"code\": \"ATT52RJ426BNUE610TN67PT6U9Y3\",\n        \"title\": \"CEO & Space Tourist\",\n        \"organization\": \"Amazon\",\n        \"address_line_1\": \"440 Terry Avenue North\",\n        \"address_line_2\": \"\",\n        \"address_city\": \"Seattle\",\n        \"address_state\": \"WA\",\n        \"address_zip\": \"98109\",\n        \"address_country\": \"United States\",\n        \"address_phone\": \"2062661000\",\n        \"code_internal\": \"CODE\",\n        \"dietary_restrictions\": \"Vegan\",\n        \"accessibility_requirements\": \"Requires assisstance getting into rocketship\",\n        \"designations\": \"He/Him\"\n    }\n]"
                        }
                    ]
                },
                {
                    "name": "Convert Member/Attendee Emails to Codes",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(",
                                    "        [",
                                    "            pm.collectionVariables.get(\"Created Attendee Email 1\"),",
                                    "            pm.collectionVariables.get(\"Created Attendee Email 2\")",
                                    "        ]",
                                    "    );",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest(\"Delete Attendee\");"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "e2ac88cc-2e56-4fcb-b466-48c1b8ffad42",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"emails\": [\n        \"{{Created Attendee Email 1}}\",\n        \"{{Created Attendee Email 2}}\"\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/members/convertcodes/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "members",
                                "convertcodes",
                                ""
                            ]
                        },
                        "description": "As the PheedLoop API uses Member/Attendee codes as the unique slug field, it may be desirable to convert the Member/Attendee's emails into our codes to store in your database. This can be useful if you are displaying a list of Member/Attendees to your users and want to present a human readable label, but still interact with the API natively."
                    },
                    "response": [
                        {
                            "id": "58d0da74-f4f6-4707-bb79-943ed36d84ba",
                            "name": "Convert Member/Attendee Emails to Codes",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"emails\": [\n        \"john@niantic.com\",\n        \"timcook@apple.com\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/members/convertcodes/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "members",
                                        "convertcodes",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Tue, 03 Aug 2021 15:49:53 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "POST, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"timcook@apple.com\": \"ATTLRN4HP5SBCJDNIXX7J6NZ44OC\",\n    \"john@niantic.com\": \"ATT3HBIVHA6TC7UBMM7W80L82KM1\"\n}"
                        }
                    ]
                }
            ],
            "id": "4ef260c0-6811-4141-b3be-bb72b8a11132",
            "description": "A Member in PheedLoop are users that are related to your Organization, outside of an Event. Members are automatically created when Attendees registers for an event, you manually create them in the Dashboard, or you import/sync them from an external system.\n\nAttendees and Members share the same underlying data model, but the object is referred to as an Attendee when dealing with Event level interactions, and a Member when dealing with Organization level interactions. Members don't necessarily need to be attending an Event to be counted as a Member.\n\nMembers can be viewed in the Dashboard under by clicking on the **Account Menu** (the gear on the top right), then clicking **Membership -> Members**. This is the list of all Members currently assigned to your Organization. To see a Member as related to a specific event, (aka an Attendee) please refer to [Attendees](#0ad1c4ca-4622-465b-ab70-301d9bc992cc).\n\nSeveral endpoints are available for getting and updating Members within the PheedLoop system. All of the Member endpoints are organization specific and require an `organization_code` in their URL.\n\nNote that as Members and Attendees share the same data model, any changes to a Member will affect the same Attendee across all events.",
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.collectionVariables.set(\"Organization Attendee Fields\", ",
                            "    [",
                            "        'first_name', ",
                            "        'last_name',",
                            "        'email',",
                            "        'contact_groups',",
                            "        'contact_organization',",
                            "        'membership_tier',",
                            "        'about', ",
                            "        'code',",
                            "        'title',",
                            "        'organization', ",
                            "        'address_line_1',",
                            "        'address_line_2',",
                            "        'address_city', ",
                            "        'address_state',",
                            "        'address_zip',",
                            "        'address_country', ",
                            "        'address_phone',",
                            "        'code_internal',",
                            "        'dietary_restrictions', ",
                            "        'accessibility_requirements',",
                            "        'designations',",
                            "        'events_attended'",
                            "    ]",
                            ");"
                        ]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ]
        },
        {
            "name": "Events",
            "item": [
                {
                    "name": "List Events",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()[\"results\"][0]).to.have.all.keys(",
                                    "        [",
                                    "            \"id\",",
                                    "            \"code\",",
                                    "            \"user\",",
                                    "            \"event_name\",",
                                    "            \"description\",",
                                    "            \"date\",",
                                    "            \"end_date\",",
                                    "            \"total_user_credits\",",
                                    "            \"remaining_user_credits\"",
                                    "        ]",
                                    "    );",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "47ecc370-1c13-4846-92ce-57546bcd70ed",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                ""
                            ]
                        },
                        "description": "List all the events in your organization.\n\n##### Pagination\nThis endpoint is paginated with a default size of 500. You may customize the page size with the optional `page_size` query parameter. You may receive a specific page by using the optional `page` query parameter. For example: `?page=2&page_size=10`."
                    },
                    "response": [
                        {
                            "id": "57ed0d2d-0899-49e4-bbd3-aa865e3e8405",
                            "name": "List Events",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/?page_size=2",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        ""
                                    ],
                                    "query": [
                                        {
                                            "key": "page_size",
                                            "value": "2"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Thu, 04 Nov 2021 21:24:41 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"count\": 3,\n    \"next\": \"{{Base URL}}api/v3/organization/ORGRZ6WCVEX29YC73F/events/?page=2&page_size=2\",\n    \"previous\": null,\n    \"results\": [\n        {\n            \"id\": 26345,\n            \"code\": \"EVEPLTXAWUFQQ\",\n            \"user\": \"john@niantic.com\",\n            \"event_name\": \"Anti-Chicken Wing Convention\",\n            \"description\": \"Chicken Wings are awful and must be stopped!\",\n            \"date\": \"2022-02-02\",\n            \"end_date\": \"2022-02-04\",\n            \"total_user_credits\": 50,\n            \"remaining_user_credits\": 12\n        },\n        {\n            \"id\": 26338,\n            \"code\": \"EVEMQGSRJKNHG\",\n            \"user\": \"john@niantic.com\",\n            \"event_name\": \"Chicken Wing Convention\",\n            \"description\": \"Chicken Wings are the best and we must celebrate them!\",\n            \"date\": \"2022-02-01\",\n            \"end_date\": \"2022-02-03\",\n            \"total_user_credits\": 50,\n            \"remaining_user_credits\": 12\n        }\n    ]\n}"
                        }
                    ]
                },
                {
                    "name": "Get Single Event",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(",
                                    "        [",
                                    "            \"id\",",
                                    "            \"code\",",
                                    "            \"user\",",
                                    "            \"event_name\",",
                                    "            \"description\",",
                                    "            \"date\",",
                                    "            \"end_date\",",
                                    "            \"total_user_credits\",",
                                    "            \"remaining_user_credits\"",
                                    "        ]",
                                    "    );",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "1bc6aca9-077f-49c9-9d08-2a91abdd13fb",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                "{{Event Code}}",
                                ""
                            ]
                        },
                        "description": "Gets a single event, based on the Event Code passed in the URL."
                    },
                    "response": [
                        {
                            "id": "8cd771f2-7c8c-4495-998d-21ca2aadb632",
                            "name": "Get Single Event",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Fri, 05 Nov 2021 17:31:59 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"id\": 26345,\n    \"code\": \"{{Event Code}}\",\n    \"user\": \"john@niantic.com\",\n    \"event_name\": \"Anti-Chicken Wing Convention\",\n    \"description\": \"Chicken Wings are awful and must be stopped!\",\n    \"date\": \"2022-02-02\",\n    \"end_date\": \"2022-02-04\",\n    \"total_user_credits\": 50,\n    \"remaining_user_credits\": 12\n}"
                        }
                    ]
                }
            ],
            "id": "f52a1778-bda2-40a7-a888-5c986af4186a",
            "description": "Events in the PheedLoop system are tied to your Organization and are where you and your Attendees will spend most of their time within the software.\n\nEvents contain all information about each specific event including start and end times, sessions, speakers, exhibitors and more. Events are accessible from the main dashboard page under the button called **Events**. You may also find them under the **Account Menu** (the gear on the top right), **All Events**.\n\nEach Event has a specific Event Code, accessible in the URLs for the event and from the List Events endpoint."
        },
        {
            "name": "Registrations",
            "item": [
                {
                    "name": "List Registrations",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()[\"results\"][0]).to.have.all.keys(",
                                    "        [",
                                    "            \"code\",",
                                    "            \"organization_code\",",
                                    "            \"first_name\",",
                                    "            \"last_name\",",
                                    "            \"email\",",
                                    "            \"organization\",",
                                    "            \"title\",",
                                    "            \"address_line_1\",",
                                    "            \"address_line_2\",",
                                    "            \"address_city\",",
                                    "            \"address_state\",",
                                    "            \"address_zip\",",
                                    "            \"address_country\",",
                                    "            \"address_phone\",",
                                    "            \"registration_complete\",",
                                    "            \"canceled\",",
                                    "            \"paid\",",
                                    "            \"date\",",
                                    "            \"purchases\",",
                                    "            \"sub_total\",",
                                    "            \"tax_total\",",
                                    "            \"payment_total\",",
                                    "            \"refund_total\",",
                                    "            \"amount_due\",",
                                    "            \"charge_id\",",
                                    "            \"promotion\",",
                                    "            \"refund_id\",",
                                    "            \"refund_date\",",
                                    "            \"notes\",",
                                    "            \"form_response\"",
                                    "        ]",
                                    "    );",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "ce4c70a8-dd60-46a1-aa72-30f27023d7de",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/registrations/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                "{{Event Code}}",
                                "registrations",
                                ""
                            ]
                        },
                        "description": "Returns a list of all registrations for your event, each item in the list contains several useful fields showing information regarding the registration.\n\n##### Pagination\nThis endpoint is paginated with a default size of 500. You may customize the page size with the optional `page_size` query parameter. You may receive a specific page by using the optional `page` query parameter. For example: `?page=2&page_size=10`."
                    },
                    "response": [
                        {
                            "id": "6629f735-14a4-4fd9-84b4-a3d871a1f4ca",
                            "name": "List Registrations",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/registrations/?page_size=1",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "registrations",
                                        ""
                                    ],
                                    "query": [
                                        {
                                            "key": "page_size",
                                            "value": "1"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Thu, 04 Nov 2021 21:28:25 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"count\": 2,\n    \"next\": \"{{Base URL}}api/v3/organization/ORGRZ6WCVEX29YC73F/registrations/?page=2&page_size=1\",\n    \"previous\": null,\n    \"results\": [\n        {\n            \"code\": \"REG1GWPXQGP\",\n            \"organization_code\": \"ORGRZ6WCVEX29YC73F\",\n            \"first_name\": \"John\",\n            \"last_name\": \"Hanke\",\n            \"email\": \"john@niantic.com\",\n            \"organization\": \"Niantic\",\n            \"title\": \"CEO\",\n            \"address_line_1\": \"1 Ferry Building\",\n            \"address_line_2\": \"Suite 200\",\n            \"address_city\": \"San Francisco\",\n            \"address_state\": \"CA\",\n            \"address_zip\": \"94111\",\n            \"address_country\": \"United States\",\n            \"address_phone\": \"14155708871\",\n            \"registration_complete\": true,\n            \"canceled\": false,\n            \"paid\": true,\n            \"date\": \"2021-11-04T18:09:33.201640Z\",\n            \"purchases\": [],\n            \"sub_total\": 85.0,\n            \"tax_total\": 11.05,\n            \"payment_total\": 113.0,\n            \"refund_total\": 0.0,\n            \"amount_due\": 0.0,\n            \"charge_id\": \"st_sample000abc\",\n            \"promotion\": \"PROCBKUBYSO\",\n            \"refund_id\": \"\",\n            \"refund_date\": null,\n            \"notes\": \"\",\n            \"form_response\": [\n                {\n                    \"answer\": \"What is your favourite Pokemon?\",\n                    \"question\": \"Tentacruel\"\n                }\n            ]\n        }\n    ]\n}"
                        }
                    ]
                },
                {
                    "name": "List Ticket Purchases",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()[\"results\"][0]).to.have.all.keys(",
                                    "        [",
                                    "            \"code\",",
                                    "            \"event\",",
                                    "            \"organization_code\",",
                                    "            \"first_name\",",
                                    "            \"last_name\",",
                                    "            \"email\",",
                                    "            \"organization\",",
                                    "            \"title\",",
                                    "            \"address_line_1\",",
                                    "            \"address_line_2\",",
                                    "            \"address_city\",",
                                    "            \"address_state\",",
                                    "            \"address_zip\",",
                                    "            \"address_country\",",
                                    "            \"address_phone\",",
                                    "            \"tags\",",
                                    "            \"dietary_restrictions\",",
                                    "            \"registrant_first_name\",",
                                    "            \"registrant_last_name\",",
                                    "            \"registrant_email\",",
                                    "            \"registrant_organization\",",
                                    "            \"ticket_name\",",
                                    "            \"ticket_code\",",
                                    "            \"ticket_price\",",
                                    "            \"paid\",",
                                    "            \"date\",",
                                    "            \"is_canceled\",",
                                    "            \"checked_in\",",
                                    "            \"checked_in_date\",",
                                    "            \"registration_complete\",",
                                    "            \"registration_id\",",
                                    "            \"registration_date\",",
                                    "            \"sub_total\",",
                                    "            \"tax_total\",",
                                    "            \"payment_total\",",
                                    "            \"charge_id\",",
                                    "            \"promotion\",",
                                    "            \"form_response\"",
                                    "        ]",
                                    "    );",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest(\"List Tags\");"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "03ed67c1-391a-4d59-be5e-b4a2af59cead",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/ticketpurchases/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                "{{Event Code}}",
                                "ticketpurchases",
                                ""
                            ]
                        },
                        "description": "Returns a list of all ticket purchases for your event, each item in the list contains several useful fields showing information regarding the purchase.\n\n##### Pagination\nThis endpoint is paginated with a default size of 500. You may customize the page size with the optional `page_size` query parameter. You may receive a specific page by using the optional `page` query parameter. For example: `?page=2&page_size=10`."
                    },
                    "response": [
                        {
                            "id": "502c8736-a254-494d-b8a3-fdeeb54ce493",
                            "name": "List Ticket Purchases",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/ticketpurchases/?page_size=1",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "ticketpurchases",
                                        ""
                                    ],
                                    "query": [
                                        {
                                            "key": "page_size",
                                            "value": "1"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Thu, 04 Nov 2021 21:41:12 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"count\": 2,\n    \"next\": \"{{Base URL}}api/v3/organization/ORGRZ6WCVEX29YC73F/ticketpurchases/?page=2&page_size=1\",\n    \"previous\": null,\n    \"results\": [\n        {\n            \"code\": \"PUR6B49JOSP\",\n            \"event\": \"EVEPLTXAWUFQQ\",\n            \"organization_code\": \"ORGRZ6WCVEX29YC73F\",\n            \"first_name\": \"John\",\n            \"last_name\": \"Hanke\",\n            \"email\": \"john@niantic.com\",\n            \"organization\": \"Niantic\",\n            \"title\": \"CEO\",\n            \"address_line_1\": \"1 Ferry Building\",\n            \"address_line_2\": \"Suite 200\",\n            \"address_city\": \"San Francisco\",\n            \"address_state\": \"CA\",\n            \"address_zip\": \"94111\",\n            \"address_country\": \"United States\",\n            \"address_phone\": \"14155708871\",\n            \"tags\": [\n                \"TAGOM4HRPPG\"\n            ],\n            \"dietary_restrictions\": \"Gluten\",\n            \"registrant_first_name\": \"John\",\n            \"registrant_last_name\": \"Hanke\",\n            \"registrant_email\": \"john@niantic.com\",\n            \"registrant_organization\": \"Niantic\",\n            \"ticket_name\": \"Sample ticket\",\n            \"ticket_code\": \"TICGP3GX7KP\",\n            \"ticket_price\": 100,\n            \"paid\": true,\n            \"date\": \"2021-11-04T18:09:33.425842Z\",\n            \"is_canceled\": false,\n            \"checked_in\": false,\n            \"checked_in_date\": null,\n            \"registration_complete\": true,\n            \"registration_id\": \"REG1GWPXQGP\",\n            \"registration_date\": \"2021-11-04T18:09:33.201640Z\",\n            \"sub_total\": 85,\n            \"tax_total\": 11.05,\n            \"payment_total\": 96.05,\n            \"charge_id\": \"st_sample000abc\",\n            \"promotion\": \"PROCBKUBYSO\",\n            \"form_response\": [\n                {\n                    \"answer\": \"What is your favourite Pokemon?\",\n                    \"question\": \"Tentacruel\"\n                }\n            ]\n        }\n    ]\n}"
                        }
                    ]
                }
            ],
            "id": "8e22b4c7-5418-4291-a952-2f8071b34c75",
            "description": "A Registration is created when a user registers for one of your Events. The Registration model contains all properties about how the user registered for your Event, including pricing and form responses.\n\nRegistrations are accessible from the Dashboard under your chosen **Event -> Registrations -> Orders**. You may manually create them here or these will be created as Attendees register for your event."
        },
        {
            "name": "Sessions",
            "item": [
                {
                    "name": "List Sessions",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()[\"results\"][0]).to.have.all.keys(pm.collectionVariables.get(\"Session Fields\"));",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "69535055-d18d-4f6c-bcc1-87ff69ccef10",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/sessions/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                "{{Event Code}}",
                                "sessions",
                                ""
                            ]
                        },
                        "description": "Returns a list of Sessions for your specified Event. \n\n##### Pagination\nThis endpoint is paginated with a default size of 500. You may customize the page size with the optional `page_size` query parameter. You may receive a specific page by using the optional `page` query parameter. For example: `?page=2&page_size=10`.\n\n##### Searching & Filtering\nYou may perform custom searches on this endpoint, to filter the data you wish to receive. Fields you are able to search for on this endpoint are:\n\n* title\n\nSearches will preform a regex sub string look up, so for example, a query of `?title=another` will return Sessions that are called `Another Session`.\n\nSearches are case insensitive."
                    },
                    "response": [
                        {
                            "id": "7f65b1b1-2388-484d-ab86-5e5f870bf7c0",
                            "name": "List Sessions",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/sessions/?page=2&page_size=1",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "sessions",
                                        ""
                                    ],
                                    "query": [
                                        {
                                            "key": "page",
                                            "value": "2"
                                        },
                                        {
                                            "key": "page_size",
                                            "value": "1"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Wed, 01 Dec 2021 19:24:22 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, POST, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"count\": 19,\n    \"next\": \"{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/sessions/?page=3&page_size=1\",\n    \"previous\": \"{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/sessions/?page_size=1\",\n    \"results\": [\n       {\n            \"code\": \"SESRCPT923RG7R6P8\",\n            \"event\": \"{{Event Code}}\",\n            \"title\": \"The Importance of Chicken Wings\",\n            \"about\": \"We learn all about how fantastic chicken wings are. They really are yummy!\",\n            \"instructions\": \"Follow your stomach!\",\n            \"session_date\": \"2021-11-22\",\n            \"start_time\": \"12:00:00\",\n            \"end_time\": \"13:30:00\",\n            \"tracks\": [\n                \"My First Track\"\n            ],\n            \"tags_restrict\": [\n                \"TAGW298HJJF\"\n            ]\n        }\n    ]\n}"
                        },
                        {
                            "id": "a9c52feb-c958-4a8d-855a-97f0e6d034a8",
                            "name": "Search Sessions",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/sessions/?title=Importance",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "sessions",
                                        ""
                                    ],
                                    "query": [
                                        {
                                            "key": "title",
                                            "value": "Importance"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Wed, 01 Dec 2021 19:27:12 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, POST, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n       {\n            \"code\": \"SESRCPT923RG7R6P8\",\n            \"event\": \"{{Event Code}}\",\n            \"title\": \"The Importance of Chicken Wings\",\n            \"about\": \"We learn all about how fantastic chicken wings are. They really are yummy!\",\n            \"instructions\": \"Follow your stomach!\",\n            \"session_date\": \"2021-11-22\",\n            \"start_time\": \"12:00:00\",\n            \"end_time\": \"13:30:00\",\n            \"tracks\": [\n                \"My First Track\"\n            ],\n            \"tags_restrict\": [\n                \"TAGW298HJJF\"\n            ]\n        }\n    ]\n}"
                        }
                    ]
                },
                {
                    "name": "List Sessions (Organization Wide)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()[\"results\"][0]).to.have.all.keys(pm.collectionVariables.get(\"Session Fields\"));",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "a13b6cbd-e375-4b28-abdc-925f71abff78",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/sessions/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "sessions",
                                ""
                            ]
                        },
                        "description": "Returns a list of Sessions for all Events across your organization.\n\n##### Pagination\nThis endpoint is paginated with a default size of 500. You may customize the page size with the optional `page_size` query parameter. You may receive a specific page by using the optional `page` query parameter. For example: `?page=2&page_size=10`.\n\n##### Searching & Filtering\nYou may perform custom searches on this endpoint, to filter the data you wish to receive. Fields you are able to search for on this endpoint are:\n\n* title\n\nSearches will preform a regex sub string look up, so for example, a query of `?title=another` will return Sessions that are called `Another Session`.\n\nSearches are case insensitive."
                    },
                    "response": [
                        {
                            "id": "b676c7b6-d59a-44bb-a163-2da91739aca1",
                            "name": "List Sessions (Organization Wide)",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/sessions/?page=2&page_size=1",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "sessions",
                                        ""
                                    ],
                                    "query": [
                                        {
                                            "key": "page",
                                            "value": "2"
                                        },
                                        {
                                            "key": "page_size",
                                            "value": "1"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Wed, 01 Dec 2021 19:19:06 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"count\": 22,\n    \"next\": \"{{Base URL}}api/v3/organization/{{Organization}}/sessions/?page=3&page_size=1\",\n    \"previous\": \"{{Base URL}}api/v3/organization/{{Organization}}/sessions/?page_size=1\",\n    \"results\": [\n        {\n            \"code\": \"SESRCPT923RG7R6P8\",\n            \"event\": \"{{Event Code}}\",\n            \"title\": \"The Importance of Chicken Wings\",\n            \"about\": \"We learn all about how fantastic chicken wings are. They really are yummy!\",\n            \"instructions\": \"Follow your stomach!\",\n            \"session_date\": \"2021-11-22\",\n            \"start_time\": \"12:00:00\",\n            \"end_time\": \"13:30:00\",\n            \"tracks\": [\n                \"My First Track\"\n            ],\n            \"tags_restrict\": [\n                \"TAGW298HJJF\"\n            ]\n        }\n    ]\n}"
                        },
                        {
                            "id": "8ccca21b-82a9-4d90-8f7d-af285cafb34c",
                            "name": "Search Sessions (Organization Wide)",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/sessions/?title=Importance",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "sessions",
                                        ""
                                    ],
                                    "query": [
                                        {
                                            "key": "title",
                                            "value": "Importance"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Wed, 01 Dec 2021 19:19:06 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n       {\n            \"code\": \"SESRCPT923RG7R6P8\",\n            \"event\": \"{{Event Code}}\",\n            \"title\": \"The Importance of Chicken Wings\",\n            \"about\": \"We learn all about how fantastic chicken wings are. They really are yummy!\",\n            \"instructions\": \"Follow your stomach!\",\n            \"session_date\": \"2021-11-22\",\n            \"start_time\": \"12:00:00\",\n            \"end_time\": \"13:30:00\",\n            \"tracks\": [\n                \"My First Track\"\n            ],\n            \"tags_restrict\": [\n                \"TAGW298HJJF\"\n            ]\n        }\n    ]\n}"
                        }
                    ]
                },
                {
                    "name": "Get Single Session",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"Session Fields\"));",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "86d57003-a00e-42b1-b328-422bbb97e995",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/sessions/{{Session Code}}/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                "{{Event Code}}",
                                "sessions",
                                "{{Session Code}}",
                                ""
                            ]
                        },
                        "description": "Gets a single Session for an Event, based on the Session Code used in the URL."
                    },
                    "response": [
                        {
                            "id": "3a6dbf83-9649-4ae2-a681-b7c5f1d62eda",
                            "name": "Get Single Session",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/sessions/{{Session Code}}/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "sessions",
                                        "{{Session Code}}",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Wed, 01 Dec 2021 19:32:50 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, PATCH, DELETE, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"code\": \"SESRCPT923RG7R6P8\",\n    \"event\": \"{{Event Code}}\",\n    \"title\": \"The Importance of Chicken Wings\",\n    \"about\": \"We learn all about how fantastic chicken wings are. They really are yummy!\",\n    \"instructions\": \"Follow your stomach!\",\n    \"session_date\": \"2021-11-22\",\n    \"start_time\": \"12:00:00\",\n    \"end_time\": \"13:30:00\",\n    \"tracks\": [\n        \"My First Track\"\n    ],\n    \"tags_restrict\": [\n        \"TAGW298HJJF\"\n    ]\n}"
                        }
                    ]
                },
                {
                    "name": "Get Single Session (Organization Wide)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"Session Fields\"));",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest(\"Update Session\");"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "8dcc2222-0749-49e3-b3ed-e8873458d21b",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/sessions/{{Session Code}}/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "sessions",
                                "{{Session Code}}",
                                ""
                            ]
                        },
                        "description": "Gets a single Session for any Event in your Organization, based on the Session Code used in the URL."
                    },
                    "response": [
                        {
                            "id": "e9e06032-9560-4411-8f8c-0ad8f14982d1",
                            "name": "Get Single Session",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/sessions/{{Session Code}}/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "sessions",
                                        "{{Session Code}}",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Wed, 01 Dec 2021 19:32:50 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, PATCH, DELETE, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"code\": \"SESRCPT923RG7R6P8\",\n    \"event\": \"{{Event Code}}\",\n    \"title\": \"The Importance of Chicken Wings\",\n    \"about\": \"We learn all about how fantastic chicken wings are. They really are yummy!\",\n    \"instructions\": \"Follow your stomach!\",\n    \"session_date\": \"2021-11-22\",\n    \"start_time\": \"12:00:00\",\n    \"end_time\": \"13:30:00\",\n    \"tracks\": [\n        \"My First Track\"\n    ],\n    \"tags_restrict\": [\n        \"TAGW298HJJF\"\n    ]\n}"
                        }
                    ]
                },
                {
                    "name": "Create Session",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.expect(pm.response.code).to.be.equal(201);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"Session Fields\"));",
                                    "});",
                                    "",
                                    "pm.environment.set(\"Session Code\", pm.response.json().code);",
                                    "pm.collectionVariables.set(\"Has Session Post Run\", true);",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "const runFlag = pm.collectionVariables.get(\"Has Session Post Run\")",
                                    "",
                                    "if (runFlag) {",
                                    "    postman.setNextRequest(\"Delete Session (Organization Wide)\");",
                                    "} else {",
                                    "    postman.setNextRequest(\"List Sessions\");",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "d6fd289e-5961-481c-a06a-0e63f2451e8b",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"title\": \"The Great Wing\",\n    \"about\": \"Come learn about the great Wing of the 1920s!\",\n    \"instructions\": \"Follow your stomach!\",\n    \"session_date\": \"2021-11-22\",\n    \"start_time\": \"12:00:00\",\n    \"end_time\": \"13:30:00\",\n    \"tags_restrict\": [\n        \"{{Tag Code}}\"\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/sessions/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                "{{Event Code}}",
                                "sessions",
                                ""
                            ]
                        },
                        "description": "Creates a new Session for your specified Event.\n\nThere are a few rules regarding the date and time fields:\n\n* Sessions can not start after your Event is over\n* Sessions can not end before your start time\n* You must supply both a start and end time if you are choosing to supply a time (omit `start_time` and `end_time` if you do not wish to assign a time to your Session)\n\nNote that tracks is a read only field."
                    },
                    "response": [
                        {
                            "id": "e45f6ffd-2019-49fe-b6ea-2276fe0e5eaf",
                            "name": "Create Session",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"title\": \"The Great Wing\",\n    \"about\": \"Come learn about the great Wing of the 1920s!\",\n    \"instructions\": \"Follow your stomach!\",\n    \"session_date\": \"2021-11-22\",\n    \"start_time\": \"12:00:00\",\n    \"end_time\": \"13:30:00\",\n    \"tags_restrict\": [\n        \"{{Tag Code}}\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/sessions/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "sessions",
                                        ""
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Wed, 01 Dec 2021 19:38:28 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, POST, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"code\": \"SESRCPT923RG7R6P8\",\n    \"event\": \"{{Event Code}}\",\n    \"title\": \"The Importance of Chicken Wings\",\n    \"about\": \"We learn all about how fantastic chicken wings are. They really are yummy!\",\n    \"instructions\": \"Follow your stomach!\",\n    \"session_date\": \"2021-11-22\",\n    \"start_time\": \"12:00:00\",\n    \"end_time\": \"13:30:00\",\n    \"tracks\": [\n        \"My First Track\"\n    ],\n    \"tags_restrict\": [\n        \"TAGW298HJJF\"\n    ]\n}"
                        }
                    ]
                },
                {
                    "name": "Update Session",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"Session Fields\"));",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "7e5158d9-14f4-4f90-b7d1-f855f095f5bb",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "PATCH",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"title\": \"The Great Wing\",\n    \"about\": \"Come learn about the great Wing of the 1920s!\",\n    \"instructions\": \"Follow your stomach!\",\n    \"session_date\": \"2021-11-22\",\n    \"start_time\": \"12:00:00\",\n    \"end_time\": \"13:30:00\",\n    \"tags_restrict\": [\n        \"{{Tag Code}}\"\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/sessions/{{Session Code}}/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                "{{Event Code}}",
                                "sessions",
                                "{{Session Code}}",
                                ""
                            ]
                        },
                        "description": "Update a single Session, based on their code. Note the same rules regarding start times and read only fields apply here as well (see [Create Session](#link) for more information)."
                    },
                    "response": [
                        {
                            "id": "1b5af5cd-051e-493e-b070-8301fdc1846a",
                            "name": "Update Session",
                            "originalRequest": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"title\": \"The Great Wing\",\n    \"about\": \"Come learn about the great Wing of the 1920s!\",\n    \"instructions\": \"Follow your stomach!\",\n    \"session_date\": \"2021-11-22\",\n    \"start_time\": \"12:00:00\",\n    \"end_time\": \"13:30:00\",\n    \"tags_restrict\": [\n        \"{{Tag Code}}\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/sessions/{{Session Code}}/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "sessions",
                                        "{{Session Code}}",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Wed, 01 Dec 2021 19:39:40 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, PATCH, DELETE, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"code\": \"SESRCPT923RG7R6P8\",\n    \"event\": \"{{Event Code}}\",\n    \"title\": \"The Importance of Chicken Wings\",\n    \"about\": \"We learn all about how fantastic chicken wings are. They really are yummy!\",\n    \"instructions\": \"Follow your stomach!\",\n    \"session_date\": \"2021-11-22\",\n    \"start_time\": \"12:00:00\",\n    \"end_time\": \"13:30:00\",\n    \"tracks\": [\n        \"My First Track\"\n    ],\n    \"tags_restrict\": [\n        \"TAGW298HJJF\"\n    ]\n\n}"
                        }
                    ]
                },
                {
                    "name": "Delete Session",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 204\", function () {",
                                    "    pm.response.to.have.status(204);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest(\"Create Session\");"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "167ed39d-8b34-449b-b611-e89eff978499",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/sessions/{{Session Code}}/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                "{{Event Code}}",
                                "sessions",
                                "{{Session Code}}",
                                ""
                            ]
                        },
                        "description": "Deletes a single Session from your specific event. A 204 will be returned on successful deletion."
                    },
                    "response": [
                        {
                            "id": "48e12168-5420-4df4-81ea-e032f38c32a7",
                            "name": "Delete Session",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"emails\": [\n        \"{{Created Attendee Email 1}}\",\n        \"{{Created Attendee Email 2}}\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/sessions/{{Session Code}}/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "sessions",
                                        "{{Session Code}}",
                                        ""
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Wed, 01 Dec 2021 19:41:13 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Length",
                                    "value": "0"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, PATCH, DELETE, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        }
                    ]
                },
                {
                    "name": "Delete Session (Organization Wide)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 204\", function () {",
                                    "    pm.response.to.have.status(204);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest(null);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "30380b00-bd87-4df4-8b42-2fb4fc8c00b7",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/sessions/{{Session Code}}/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "sessions",
                                "{{Session Code}}",
                                ""
                            ]
                        },
                        "description": "Deletes a single Session from your Organization, regardless of which Event it is in. A 204 will be returned on successful deletion."
                    },
                    "response": [
                        {
                            "id": "034a582a-aedf-49b5-a94b-beeca7328e19",
                            "name": "Delete Session (Organization Wide)",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"emails\": [\n        \"{{Created Attendee Email 1}}\",\n        \"{{Created Attendee Email 2}}\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/sessions/{{Session Code}}/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "sessions",
                                        "{{Session Code}}",
                                        ""
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Wed, 01 Dec 2021 19:42:29 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Length",
                                    "value": "0"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, DELETE, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        }
                    ]
                }
            ],
            "id": "f2f43c53-b862-4f27-8773-a24e9015f2c5",
            "description": "A Session in PheedLoop is a mini event during your event that is presented by a Speaker (or Speakers) to your Attendees. Sessions are specific to events, but for convenience we do have some Organization wide Sessions. \n\nSessions can be viewed from the dashboard under the **All Events -> Sessions -> Sessions** section. You may created, edit, and delete sessions via this menu, as well as this API.\n\nSeveral endpoints are available for getting and updating Sessions within the PheedLoop system. All of the Session endpoints require an `organization_code` in their URL and event specific endpoints require an `event_code` in their URL. \n\nNote that all endpoints below are assumed to be an Event endpoint unless stated with `Organization Wide`.",
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.collectionVariables.set(\"Session Fields\", ",
                            "    [",
                            "        'code', ",
                            "        'event',",
                            "        'title',",
                            "        'about',",
                            "        'instructions',",
                            "        'session_date',",
                            "        'start_time', ",
                            "        'end_time',",
                            "        'tracks',",
                            "        'tags_restrict'",
                            "    ]",
                            ");"
                        ]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ]
        },
        {
            "name": "Tags",
            "item": [
                {
                    "name": "List Tags",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()[\"results\"][0]).to.have.all.keys(",
                                    "        [",
                                    "            \"id\",",
                                    "            \"code\",",
                                    "            \"name\",",
                                    "            \"event\",",
                                    "            \"description\",",
                                    "        ]",
                                    "    );",
                                    "});",
                                    "",
                                    "pm.collectionVariables.set(\"Tag Code\", pm.response.json()[\"results\"][0][\"code\"])"
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "pm.collectionVariables.set(\"Has Session Post Run\", false);",
                                    "postman.setNextRequest(\"Create Session\");"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "4427d4a5-1b4f-43ad-a6d2-117cfcd73270",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/tags/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "events",
                                "{{Event Code}}",
                                "tags",
                                ""
                            ]
                        },
                        "description": "Returns a list of all tags in your chosen event. Each item in the list contains useful tag information.\n\n##### Pagination\nThis endpoint is paginated with a default size of 500. You may customize the page size with the `page_size` query parameter. You may receive a specific page by using the `page` query parameter. For example: `?page=2&page_size=10`."
                    },
                    "response": [
                        {
                            "id": "f8798b83-f3fb-4a88-9847-64a356619295",
                            "name": "List Tags",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/events/{{Event Code}}/tags/?page_size=1",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "events",
                                        "{{Event Code}}",
                                        "tags",
                                        ""
                                    ],
                                    "query": [
                                        {
                                            "key": "page_size",
                                            "value": "1"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Thu, 04 Nov 2021 21:44:23 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"count\": 3,\n    \"next\": \"{{Base URL}}api/v3/organization/ORGRZ6WCVEX29YC73F/tags/?page=2&page_size=2\",\n    \"previous\": null,\n    \"results\": [\n        {\n            \"id\": 2294,\n            \"code\": \"TAGOM4HRPPG\",\n            \"name\": \"Exhibitor\",\n            \"event\": \"EVEPLTXAWUFQQ\",\n            \"description\": \"Someone trying to sell their products to our Attendees.\"\n        },\n        {\n            \"id\": 2292,\n            \"code\": \"TAGTNC7NG2N\",\n            \"name\": \"Speaker\",\n            \"event\": \"EVEPLTXAWUFQQ\",\n            \"description\": \"Someone talking to our Attendees.\"\n        }\n    ]\n}"
                        }
                    ]
                }
            ],
            "id": "40fdfa75-501d-40d4-a7da-8ae20bfd0451",
            "description": "Tags can be assigned Attendees which are then displayed in the Virtual Portal, Badges, PheedLoop GO, and other places. \n\nTags can be used for visual references, be part of a Gamification Team or serve other uses. Tags can be found in the Dashboard by going to your chosen **Event -> Attendees -> Tags**."
        },
        {
            "name": "REST Hooks",
            "item": [
                {
                    "name": "List Hooks",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()[\"results\"][0]).to.have.all.keys(pm.collectionVariables.get(\"REST Hook Fields\"));",
                                    "});",
                                    "",
                                    "pm.test(\"Created hook exists in list\", function () {",
                                    "    let foundHook;",
                                    "    pm.response.json()[\"results\"].forEach(hook => {",
                                    "        if (hook.id == pm.environment.get(\"Rest Hook\")) {",
                                    "            foundHook = true;",
                                    "        }",
                                    "    });",
                                    "    pm.expect(foundHook).to.equal(true);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "8d5b9e9a-c358-44d5-bcdc-05940a5c5b49",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "resthooks",
                                ""
                            ]
                        },
                        "description": "Returns all hooks currently registered to your organization. Use the id in the response when making PUT or DELETE requests."
                    },
                    "response": [
                        {
                            "id": "ddc1212f-a748-434e-aa12-11f8754f563e",
                            "name": "List Hooks",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/?page_size=1",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "resthooks",
                                        ""
                                    ],
                                    "query": [
                                        {
                                            "key": "page_size",
                                            "value": "1"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Thu, 04 Nov 2021 21:48:07 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, POST, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"count\": 2,\n    \"next\": \"{{Base URL}}api/v3/organization/ORGRZ6WCVEX29YC73F/resthooks/?page=2&page_size=1\",\n    \"previous\": null,\n    \"results\": [\n        {\n            \"action\": \"attendee.created\",\n            \"endpoint\": \"https://hooks.zapier.com/hooks/<example>/\",\n            \"id\": \"HOK7E2WVBC1\"\n        }\n    ]\n}"
                        }
                    ]
                },
                {
                    "name": "Get Single Hook",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"REST Hook Fields\"));",
                                    "});",
                                    "",
                                    "pm.test(\"Hook ID matches\", function () {",
                                    "    pm.expect(pm.response.json().id).to.equal(pm.environment.get(\"Rest Hook\"));",
                                    "});",
                                    "",
                                    "pm.test(\"Hook endpoint matches\", function () {",
                                    "    pm.expect(pm.response.json().endpoint).to.equal(pm.collectionVariables.get(\"Hook Endpoint\"));",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest('Update Single Hook');"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "6888d894-2527-4ed8-8ba0-44045ac5449b",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/{{Rest Hook}}/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "resthooks",
                                "{{Rest Hook}}",
                                ""
                            ]
                        },
                        "description": "Return a single hook based on the ID or a 404 if not found."
                    },
                    "response": [
                        {
                            "id": "b715b8fb-17d1-4d60-8e4b-62717d8424fa",
                            "name": "Get Single Hook",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/{{Rest Hook}}/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "resthooks",
                                        "{{Rest Hook}}",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Tue, 03 Aug 2021 18:16:53 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, PUT, DELETE, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"action\": \"ticketpurchase.created\",\n    \"endpoint\": \"https://hooks.zapier.com/hooks/<example>/\",\n    \"id\": \"HOK6RF9HWYX\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create Hook",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"REST Hook Fields\"));",
                                    "});",
                                    "",
                                    "pm.test(\"Hook endpoint matches request\", function () {",
                                    "    const requestEndpoint = JSON.parse(request.data).endpoint;",
                                    "    pm.expect(pm.response.json().endpoint).to.equal(requestEndpoint);",
                                    "});",
                                    "",
                                    "pm.environment.set(\"Rest Hook\", pm.response.json().id)",
                                    "pm.collectionVariables.set(\"Hook Endpoint\", pm.response.json().endpoint)"
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest('List Hooks');"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "71a875cc-e6a5-414b-8297-9b4060a94f50",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"action\":\"attendee.created\",\n    \"endpoint\":\"https://hooks.zapier.com/hooks/<example>/\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "resthooks",
                                ""
                            ]
                        },
                        "description": "Create/subscribe to a new hook. Please see list of currently available hooks at the top of this [section](#4083a015-bbb7-4f05-8386-5a8e87d46b47)."
                    },
                    "response": [
                        {
                            "id": "25ae5735-25ef-40f3-bcee-5cefdaf4b3e6",
                            "name": "Create Hook",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"action\":\"attendee.created\",\n    \"endpoint\":\"https://hooks.zapier.com/hooks/<example>/\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "resthooks",
                                        ""
                                    ]
                                }
                            },
                            "status": "CREATED",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Tue, 03 Aug 2021 18:18:25 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, POST, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"action\": \"attendee.created\",\n    \"endpoint\": \"https://hooks.zapier.com/hooks/<example>/\",\n    \"id\": \"HOKQ91QBQW6\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update Single Hook",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"REST Hook Fields\"));",
                                    "});",
                                    "",
                                    "pm.test(\"Hook action matches request\", function () {",
                                    "    const requestAction = JSON.parse(request.data).action;",
                                    "    pm.expect(pm.response.json().action).to.equal(requestAction);",
                                    "});",
                                    "",
                                    "pm.test(\"Hook endpoint matches request\", function () {",
                                    "    const requestEndpoint = JSON.parse(request.data).endpoint;",
                                    "    pm.expect(pm.response.json().endpoint).to.equal(requestEndpoint);",
                                    "});",
                                    "",
                                    "pm.test(\"Hook ID matches\", function () {",
                                    "    pm.expect(pm.response.json().id).to.equal(pm.environment.get(\"Rest Hook\"));",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "0efd8677-c4dc-490d-97fa-67d5bab5e01d",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"action\":\"attendee.updated\",\n    \"endpoint\":\"https://hooks.zapier.com/hooks/<example2>/\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/{{Rest Hook}}/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "resthooks",
                                "{{Rest Hook}}",
                                ""
                            ]
                        },
                        "description": "Update an existing REST Hook based on the ID. Can be used to change the action or the endpoint URL."
                    },
                    "response": [
                        {
                            "id": "3fd482b8-1d8b-44e1-865a-4f4fde9e1bf5",
                            "name": "Update Single Hook",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"action\":\"attendee.updated\",\n    \"endpoint\":\"https://hooks.zapier.com/hooks/<example2>/\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/{{Rest Hook}}/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "resthooks",
                                        "{{Rest Hook}}",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Tue, 03 Aug 2021 18:19:28 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, PUT, DELETE, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"action\": \"attendee.updated\",\n    \"endpoint\": \"https://hooks.zapier.com/hooks/<example2>/\",\n    \"id\": \"HOK6RF9HWYX\"\n}"
                        }
                    ]
                },
                {
                    "name": "Delete Single Hook",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 204\", function () {",
                                    "    pm.response.to.have.status(204);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest(\"Create Attendee\")"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "06ccfc98-c5b6-48ec-a1ff-77afc9a6b541",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/{{Rest Hook}}/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "resthooks",
                                "{{Rest Hook}}",
                                ""
                            ]
                        },
                        "description": "Delete/unsubscribe from a REST Hook based on the ID."
                    },
                    "response": [
                        {
                            "id": "89cb8d84-6c25-4a88-9aa6-24e5a2a93420",
                            "name": "Delete Single Hook",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/{{Rest Hook}}/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "resthooks",
                                        "{{Rest Hook}}",
                                        ""
                                    ]
                                }
                            },
                            "status": "NO CONTENT",
                            "code": 204,
                            "_postman_previewlanguage": "plain",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Tue, 03 Aug 2021 18:20:00 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Length",
                                    "value": "0"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, PUT, DELETE, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        }
                    ]
                }
            ],
            "id": "e76a086d-85a4-47d2-873f-89b40d084a5f",
            "description": "REST Hooks are a form of Webhooks, based on the REST design philosophy. We expose several REST Hooks for integrators looking to receive real time updates from our system. \n\nREST Hooks are treated as resources in our database. Each REST Hook is programmed to be sent whenever the associated event (listed below) happens in our system. As such, to receive a notification for that event, you would `POST` to the `Create Hook` endpoint which tells us what you would like to be notified for (the `action`) and where you would like to be notified (the `url`). \n\nIf you'd like to subscribe to our REST Hooks (to be notified when something changes in our database), the below documentation describes how you may subscribe or unsubscribe from our hooks. We have hooks currently available for the following:\n\n* **attendee.created** - Fired whenever an Attendee is created. An Attendee is marked as 'created' when it is added to an event. You can expect a payload of a single Attendee with the fields described in [List Attendees.](#81b12a23-c4a9-499a-9943-c751359d14a3)\n* **attendee.updated** - Fired whenever the Attendee fields change. You can expect a payload of a single Attendee with the fields described in [List Attendees.](#81b12a23-c4a9-499a-9943-c751359d14a3)\n* **attendee.deleted** - Fired whenever an Attendee is removed from an Event. You can expect a payload of a single Attendee with the fields described in [List Attendees.](#81b12a23-c4a9-499a-9943-c751359d14a3)\n* **registration.created** - Fired when a user registers for an Event. You can expect a payload containing a single registration with the fields described in [List Registrations.](#70bb6eca-792b-41d6-a69e-155bac7782cf)\n* **ticketpurchase.created** - Fired when a user purchases a ticket for an Event. You can expect a payload containing a single Ticket Purchase with the fields described in [List Ticket Purchases.](#8fc8ae5f-51a7-46ba-a5f4-278c25fcaee9)\n* **sessions.created** - Fired when a Session is created for an Event. You can expect a payload containing a single Session with the fields described in [List Sessions.](#8fc8ae5f-51a7-46ba-a5f4-278c25fcaee9)\n* **sessions.updated** - Fired when a Session is updated for an Event. You can expect a payload containing a single Session with the fields described in [List Sessions.](#8fc8ae5f-51a7-46ba-a5f4-278c25fcaee9)\n* **sessions.deleted** - Fired when a Session is deleted for an Event. You can expect a payload containing a single Session with the fields described in [List Sessions.](#8fc8ae5f-51a7-46ba-a5f4-278c25fcaee9)",
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.collectionVariables.set(\"REST Hook Fields\", ",
                            "    [",
                            "        'action', ",
                            "        'endpoint',",
                            "        'id'",
                            "    ]",
                            ");"
                        ]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ]
        },
        {
            "name": "REST Hooks Copy",
            "item": [
                {
                    "name": "List Hooks",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned in each list item\", function () {",
                                    "    pm.expect(pm.response.json()[\"results\"][0]).to.have.all.keys(pm.collectionVariables.get(\"REST Hook Fields\"));",
                                    "});",
                                    "",
                                    "pm.test(\"Created hook exists in list\", function () {",
                                    "    let foundHook;",
                                    "    pm.response.json()[\"results\"].forEach(hook => {",
                                    "        if (hook.id == pm.environment.get(\"Rest Hook\")) {",
                                    "            foundHook = true;",
                                    "        }",
                                    "    });",
                                    "    pm.expect(foundHook).to.equal(true);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "84c2e9af-1f31-47f0-94ca-7649f5ad0604",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "resthooks",
                                ""
                            ]
                        },
                        "description": "Returns all hooks currently registered to your organization. Use the id in the response when making PUT or DELETE requests."
                    },
                    "response": [
                        {
                            "id": "c7b42386-9d28-43af-b556-024280c83c2a",
                            "name": "List Hooks",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/?page_size=1",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "resthooks",
                                        ""
                                    ],
                                    "query": [
                                        {
                                            "key": "page_size",
                                            "value": "1"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Thu, 04 Nov 2021 21:48:07 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, POST, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"count\": 2,\n    \"next\": \"{{Base URL}}api/v3/organization/ORGRZ6WCVEX29YC73F/resthooks/?page=2&page_size=1\",\n    \"previous\": null,\n    \"results\": [\n        {\n            \"action\": \"attendee.created\",\n            \"endpoint\": \"https://hooks.zapier.com/hooks/<example>/\",\n            \"id\": \"HOK7E2WVBC1\"\n        }\n    ]\n}"
                        }
                    ]
                },
                {
                    "name": "Get Single Hook",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"REST Hook Fields\"));",
                                    "});",
                                    "",
                                    "pm.test(\"Hook ID matches\", function () {",
                                    "    pm.expect(pm.response.json().id).to.equal(pm.environment.get(\"Rest Hook\"));",
                                    "});",
                                    "",
                                    "pm.test(\"Hook endpoint matches\", function () {",
                                    "    pm.expect(pm.response.json().endpoint).to.equal(pm.collectionVariables.get(\"Hook Endpoint\"));",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest('Update Single Hook');"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "fd2836df-4bdf-4c5a-8190-e3168ce91061",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/{{Rest Hook}}/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "resthooks",
                                "{{Rest Hook}}",
                                ""
                            ]
                        },
                        "description": "Return a single hook based on the ID or a 404 if not found."
                    },
                    "response": [
                        {
                            "id": "cba79a4d-74cc-4734-9e55-13496627cc41",
                            "name": "Get Single Hook",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/{{Rest Hook}}/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "resthooks",
                                        "{{Rest Hook}}",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Tue, 03 Aug 2021 18:16:53 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, PUT, DELETE, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"action\": \"ticketpurchase.created\",\n    \"endpoint\": \"https://hooks.zapier.com/hooks/<example>/\",\n    \"id\": \"HOK6RF9HWYX\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create Hook",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"REST Hook Fields\"));",
                                    "});",
                                    "",
                                    "pm.test(\"Hook endpoint matches request\", function () {",
                                    "    const requestEndpoint = JSON.parse(request.data).endpoint;",
                                    "    pm.expect(pm.response.json().endpoint).to.equal(requestEndpoint);",
                                    "});",
                                    "",
                                    "pm.environment.set(\"Rest Hook\", pm.response.json().id)",
                                    "pm.collectionVariables.set(\"Hook Endpoint\", pm.response.json().endpoint)"
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest('List Hooks');"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "170a4e70-3a64-4878-9159-3cfce5260688",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"action\":\"attendee.created\",\n    \"endpoint\":\"https://hooks.zapier.com/hooks/<example>/\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "resthooks",
                                ""
                            ]
                        },
                        "description": "Create/subscribe to a new hook. Please see list of currently available hooks at the top of this [section](#4083a015-bbb7-4f05-8386-5a8e87d46b47)."
                    },
                    "response": [
                        {
                            "id": "0807ee6c-73dd-4d8c-82f4-7db3f7b57008",
                            "name": "Create Hook",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"action\":\"attendee.created\",\n    \"endpoint\":\"https://hooks.zapier.com/hooks/<example>/\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "resthooks",
                                        ""
                                    ]
                                }
                            },
                            "status": "CREATED",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Tue, 03 Aug 2021 18:18:25 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, POST, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"action\": \"attendee.created\",\n    \"endpoint\": \"https://hooks.zapier.com/hooks/<example>/\",\n    \"id\": \"HOKQ91QBQW6\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update Single Hook",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"All excepted fields are returned\", function () {",
                                    "    pm.expect(pm.response.json()).to.have.all.keys(pm.collectionVariables.get(\"REST Hook Fields\"));",
                                    "});",
                                    "",
                                    "pm.test(\"Hook action matches request\", function () {",
                                    "    const requestAction = JSON.parse(request.data).action;",
                                    "    pm.expect(pm.response.json().action).to.equal(requestAction);",
                                    "});",
                                    "",
                                    "pm.test(\"Hook endpoint matches request\", function () {",
                                    "    const requestEndpoint = JSON.parse(request.data).endpoint;",
                                    "    pm.expect(pm.response.json().endpoint).to.equal(requestEndpoint);",
                                    "});",
                                    "",
                                    "pm.test(\"Hook ID matches\", function () {",
                                    "    pm.expect(pm.response.json().id).to.equal(pm.environment.get(\"Rest Hook\"));",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "e793534a-90d2-4fc4-bc7f-040c54090891",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"action\":\"attendee.updated\",\n    \"endpoint\":\"https://hooks.zapier.com/hooks/<example2>/\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/{{Rest Hook}}/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "resthooks",
                                "{{Rest Hook}}",
                                ""
                            ]
                        },
                        "description": "Update an existing REST Hook based on the ID. Can be used to change the action or the endpoint URL."
                    },
                    "response": [
                        {
                            "id": "d4fbc017-69e4-4c1d-862a-2745e80b998f",
                            "name": "Update Single Hook",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"action\":\"attendee.updated\",\n    \"endpoint\":\"https://hooks.zapier.com/hooks/<example2>/\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/{{Rest Hook}}/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "resthooks",
                                        "{{Rest Hook}}",
                                        ""
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Tue, 03 Aug 2021 18:19:28 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, PUT, DELETE, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n    \"action\": \"attendee.updated\",\n    \"endpoint\": \"https://hooks.zapier.com/hooks/<example2>/\",\n    \"id\": \"HOK6RF9HWYX\"\n}"
                        }
                    ]
                },
                {
                    "name": "Delete Single Hook",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 204\", function () {",
                                    "    pm.response.to.have.status(204);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest(\"Create Attendee\")"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "43f89562-d396-4c56-b4b2-b98c324be3ce",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "X-API-KEY",
                                "value": "{{API v3 Key}}",
                                "type": "text"
                            },
                            {
                                "key": "X-API-SECRET",
                                "value": "{{API v3 Secret}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/{{Rest Hook}}/",
                            "host": [
                                "{{Base URL}}api"
                            ],
                            "path": [
                                "v3",
                                "organization",
                                "{{Organization}}",
                                "resthooks",
                                "{{Rest Hook}}",
                                ""
                            ]
                        },
                        "description": "Delete/unsubscribe from a REST Hook based on the ID."
                    },
                    "response": [
                        {
                            "id": "71d4eea5-ffe8-46a0-850a-0a662f22f3a3",
                            "name": "Delete Single Hook",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "X-API-KEY",
                                        "value": "{{API v3 Key}}",
                                        "type": "text"
                                    },
                                    {
                                        "key": "X-API-SECRET",
                                        "value": "{{API v3 Secret}}",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{Base URL}}api/v3/organization/{{Organization}}/resthooks/{{Rest Hook}}/",
                                    "host": [
                                        "{{Base URL}}api"
                                    ],
                                    "path": [
                                        "v3",
                                        "organization",
                                        "{{Organization}}",
                                        "resthooks",
                                        "{{Rest Hook}}",
                                        ""
                                    ]
                                }
                            },
                            "status": "NO CONTENT",
                            "code": 204,
                            "_postman_previewlanguage": "plain",
                            "header": [
                                {
                                    "key": "Date",
                                    "value": "Tue, 03 Aug 2021 18:20:00 GMT"
                                },
                                {
                                    "key": "Server",
                                    "value": "WSGIServer/0.1 Python/2.7.18"
                                },
                                {
                                    "key": "Vary",
                                    "value": "Accept"
                                },
                                {
                                    "key": "Content-Length",
                                    "value": "0"
                                },
                                {
                                    "key": "Allow",
                                    "value": "GET, PUT, DELETE, HEAD, OPTIONS"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        }
                    ]
                }
            ],
            "id": "d11610b7-97d0-4a24-986b-04972af50e65",
            "description": "REST Hooks are a form of Webhooks, based on the REST design philosophy. We expose several REST Hooks for integrators looking to receive real time updates from our system. \n\nREST Hooks are treated as resources in our database. Each REST Hook is programmed to be sent whenever the associated event (listed below) happens in our system. As such, to receive a notification for that event, you would `POST` to the `Create Hook` endpoint which tells us what you would like to be notified for (the `action`) and where you would like to be notified (the `url`). \n\nIf you'd like to subscribe to our REST Hooks (to be notified when something changes in our database), the below documentation describes how you may subscribe or unsubscribe from our hooks. We have hooks currently available for the following:\n\n* **attendee.created** - Fired whenever an Attendee is created. An Attendee is marked as 'created' when it is added to an event. You can expect a payload of a single Attendee with the fields described in [List Attendees.](#81b12a23-c4a9-499a-9943-c751359d14a3)\n* **attendee.updated** - Fired whenever the Attendee fields change. You can expect a payload of a single Attendee with the fields described in [List Attendees.](#81b12a23-c4a9-499a-9943-c751359d14a3)\n* **attendee.deleted** - Fired whenever an Attendee is removed from an Event. You can expect a payload of a single Attendee with the fields described in [List Attendees.](#81b12a23-c4a9-499a-9943-c751359d14a3)\n* **registration.created** - Fired when a user registers for an Event. You can expect a payload containing a single registration with the fields described in [List Registrations.](#70bb6eca-792b-41d6-a69e-155bac7782cf)\n* **ticketpurchase.created** - Fired when a user purchases a ticket for an Event. You can expect a payload containing a single Ticket Purchase with the fields described in [List Ticket Purchases.](#8fc8ae5f-51a7-46ba-a5f4-278c25fcaee9)\n* **sessions.created** - Fired when a Session is created for an Event. You can expect a payload containing a single Session with the fields described in [List Sessions.](#8fc8ae5f-51a7-46ba-a5f4-278c25fcaee9)\n* **sessions.updated** - Fired when a Session is updated for an Event. You can expect a payload containing a single Session with the fields described in [List Sessions.](#8fc8ae5f-51a7-46ba-a5f4-278c25fcaee9)\n* **sessions.deleted** - Fired when a Session is deleted for an Event. You can expect a payload containing a single Session with the fields described in [List Sessions.](#8fc8ae5f-51a7-46ba-a5f4-278c25fcaee9)",
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.collectionVariables.set(\"REST Hook Fields\", ",
                            "    [",
                            "        'action', ",
                            "        'endpoint',",
                            "        'id'",
                            "    ]",
                            ");"
                        ]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ]
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "pm.test(\"Status code is not 404\", function () {",
                    "    pm.response.to.not.have.status(404);",
                    "});",
                    "",
                    "pm.test(\"Status code is not 500\", function () {",
                    "    pm.response.to.not.have.status(500);",
                    "});",
                    "",
                    "// Skip the below tests if we are running locally",
                    "if (pm.environment.get(\"Base URL\") === \"http://127.0.0.1:8000/\") {",
                    "    return",
                    "}",
                    "",
                    "pm.test(\"Validate base endpoint is staging or production\", function () {",
                    "    const expectedURLs = [",
                    "        \"https://staging.pheedloop.com/\", ",
                    "        \"https://api.pheedloop.com/\"",
                    "    ]",
                    "    pm.expect(pm.environment.get(\"Base URL\") in expectedURLs)",
                    "});",
                    "",
                    "pm.test(\"Validate organization is 'End to End Test Org' organization\", function () {",
                    "    const expectedOrganizations = [",
                    "        \"ORGQ1VLL4YJ0TIPJ3K\", // Staging",
                    "        \"ORG2DC7G32H6CBWP2U\", // Production",
                    "    ]",
                    "    pm.expect(pm.environment.get(\"Organization\") in expectedOrganizations);",
                    "});",
                    "",
                    "pm.test(\"Validate staging event is 'End to End Test Event' event\", function () {",
                    "    pm.expect(pm.environment.get(\"Event Code\")).to.equal(\"e2etestevent\");",
                    "});",
                    ""
                ]
            }
        }
    ],
    "variable": [
        {
            "id": "0f2e4a77-457a-46ad-9e69-10fb28693462",
            "key": "Hook Endpoint",
            "value": "https://hooks.zapier.com/hooks/<example>/"
        },
        {
            "id": "9b0e5f36-0b11-4067-b884-84c4f05dcd80",
            "key": "Organization Attendee Fields",
            "value": "first_name,last_name,email,contact_groups,contact_organization,membership_tier,about,code,title,organization,address_line_1,address_line_2,address_city,address_state,address_zip,address_country,address_phone,code_internal,dietary_restrictions,accessibility_requirements,designations,events_attended"
        },
        {
            "id": "2ecde3b6-2726-4e80-9638-4e2ea8466cc9",
            "key": "Session Fields",
            "value": "code,event,title,about,session_date,start_time,end_time"
        },
        {
            "id": "0e5c9534-4382-48e4-9e2f-b0394925c292",
            "key": "Created Attendee Code 1",
            "value": "ATTWFKEQ75Q9D68SYNO333VZ0TG8"
        },
        {
            "id": "8f540b9a-4dee-4ba9-a9f5-109a3b771ec3",
            "key": "Created Attendee Code 2",
            "value": "ATTQBVOKK11V4V6V7Z3YHOBU78F3"
        },
        {
            "id": "79d46473-1b36-4a30-820f-ac6e927256e6",
            "key": "Created Attendee Email 1",
            "value": "john@niantic.com"
        },
        {
            "id": "5af9524c-1c22-41b3-842e-b332813b3801",
            "key": "Created Attendee Email 2",
            "value": "jeffbezos@amazon.com"
        },
        {
            "id": "d2fb4012-8571-4ca7-96de-d1638c2e1d6d",
            "key": "Event Attendee Fields",
            "value": "first_name,last_name,email,contact_groups,contact_organization,membership_tier,about,code,title,organization,address_line_1,address_line_2,address_city,address_state,address_zip,address_country,address_phone,code_internal,dietary_restrictions,accessibility_requirements,designations,tags"
        },
        {
            "id": "6cfab31d-2041-476e-902a-2241b762f35b",
            "key": "Has Attendee Create Bulk Run",
            "value": ""
        },
        {
            "id": "4a5b80ce-5075-4096-95c7-990330519737",
            "key": "Has Attendee Create Run",
            "value": ""
        },
        {
            "id": "0877b9f8-8455-4b6a-b10c-ffdaae939a4d",
            "key": "REST Hook Fields",
            "value": "action,endpoint,id"
        },
        {
            "id": "e43c068e-d3e8-46f6-97a1-db664f56e155",
            "key": "Event Attendee Fields 303",
            "value": "message,additionalInformation"
        },
        {
            "id": "84b7cd49-ffec-4cc1-9521-8617a91e65e8",
            "key": "Created Member Code 1",
            "value": "ATTA3RE94TM7OGJPOJU27HK6D7D6"
        },
        {
            "id": "90ba42fb-0742-4f1e-ac16-55914d6f7016",
            "key": "Created Member Email 1",
            "value": "john@niantic.com"
        },
        {
            "id": "790e3f08-8387-4e74-bb53-c5fbbf3e2723",
            "key": "Created Member Code 2",
            "value": "ATTIPZK5VT1DBUW472JBJGI8J1MG"
        },
        {
            "id": "5419737b-1217-423f-9845-a477326d8c43",
            "key": "Created Member Email 2",
            "value": "jeffbezos@amazon.com"
        },
        {
            "id": "8ffc4e76-c3ff-4dd9-8ae8-ce831fb4c5e1",
            "key": "Has Session Post Run",
            "value": ""
        },
        {
            "id": "146b1b2c-ff4b-4c7c-bfc9-73ad2bbe5e5f",
            "key": "Tag Code",
            "value": "TAGW298HJJF"
        }
    ]
}